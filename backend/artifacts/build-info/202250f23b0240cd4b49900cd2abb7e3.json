{"id":"202250f23b0240cd4b49900cd2abb7e3","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControlEnumerable} from \"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\";\nimport {AccessControlUpgradeable} from \"../AccessControlUpgradeable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerable, AccessControlUpgradeable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControlEnumerable\n    struct AccessControlEnumerableStorage {\n        mapping(bytes32 role => EnumerableSet.AddressSet) _roleMembers;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControlEnumerable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlEnumerableStorageLocation = 0xc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000;\n\n    function _getAccessControlEnumerableStorage() private pure returns (AccessControlEnumerableStorage storage $) {\n        assembly {\n            $.slot := AccessControlEnumerableStorageLocation\n        }\n    }\n\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        return $._roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            $._roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        AccessControlEnumerableStorage storage $ = _getAccessControlEnumerableStorage();\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            $._roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/contractA.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract ContractA is Initializable, ReentrancyGuardUpgradeable, AccessControlEnumerableUpgradeable {\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant SUPER_ADMIN_ROLE = keccak256(\"SUPER_ADMIN_ROLE\");\n    uint256 private value;\n\n    event ValueSet(uint256 newValue);\n\n    // Initializer function instead of constructor\n    function initialize() public initializer {\n        __ReentrancyGuard_init(); // Initialize ReentrancyGuard\n        __AccessControlEnumerable_init(); // Initialize AccessControlEnumerable\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n        _grantRole(SUPER_ADMIN_ROLE, msg.sender);\n        value = 0;\n    }\n\n    function setValue(uint256 _value, address _sender) public nonReentrant {\n        require(hasRole(ADMIN_ROLE, _sender), \"Caller is not an admin\");\n        value += _value;\n        emit ValueSet(value);\n    }\n\n    function getValue() public view returns (uint256) {\n        return value;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[863],"ERC165Upgradeable":[1032],"IAccessControl":[1115],"Initializable":[817]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1116,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":864,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1033,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":818,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":817,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":863,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1032,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1032,1153,1115,863,817],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nodeType":"YulBlock","src":"2896:62:0","statements":[{"nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1031],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1115_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1115_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1115","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1031,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1082],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1090],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1098],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1106],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1114],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7976:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7986:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7986:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7986:20:0"},"referencedDeclaration":35,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8019:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7986:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8237:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8258:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8251:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8055:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8083:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8097:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8097:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8112:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8097:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8097:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8097:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8097:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8173:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"8155:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8155:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8150:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8216:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8209:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7901:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7921:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7935:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7927:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7912:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7970:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:0"},"scope":362,"src":"7892:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6192:0","usedErrors":[580,583,1042,1045],"usedEvents":[588,1054,1063,1072]}],"src":"108:8175:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[563],"AccessControlUpgradeable":[362],"EnumerableSet":[1766],"IAccessControlEnumerable":[1141],"Initializable":[817]},"id":564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"129:24:1"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":1142,"src":"155:112:1","symbolAliases":[{"foreign":{"id":365,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"163:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"../AccessControlUpgradeable.sol","id":368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":363,"src":"268:73:1","symbolAliases":[{"foreign":{"id":367,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"276:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":1767,"src":"342:86:1","symbolAliases":[{"foreign":{"id":369,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"350:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":818,"src":"429:66:1","symbolAliases":[{"foreign":{"id":371,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"437:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":374,"name":"Initializable","nameLocations":["648:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":817,"src":"648:13:1"},"id":375,"nodeType":"InheritanceSpecifier","src":"648:13:1"},{"baseName":{"id":376,"name":"IAccessControlEnumerable","nameLocations":["663:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":1141,"src":"663:24:1"},"id":377,"nodeType":"InheritanceSpecifier","src":"663:24:1"},{"baseName":{"id":378,"name":"AccessControlUpgradeable","nameLocations":["689:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"689:24:1"},"id":379,"nodeType":"InheritanceSpecifier","src":"689:24:1"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"497:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":563,"linearizedBaseContracts":[563,362,1032,1153,1141,1115,863,817],"name":"AccessControlEnumerableUpgradeable","nameLocation":"610:34:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":383,"libraryName":{"id":380,"name":"EnumerableSet","nameLocations":["726:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":1766,"src":"726:13:1"},"nodeType":"UsingForDirective","src":"720:49:1","typeName":{"id":382,"nodeType":"UserDefinedTypeName","pathNode":{"id":381,"name":"EnumerableSet.AddressSet","nameLocations":["744:13:1","758:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"744:24:1"},"referencedDeclaration":1479,"src":"744:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"canonicalName":"AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"775:81:1","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControlEnumerable"},"id":390,"members":[{"constant":false,"id":389,"mutability":"mutable","name":"_roleMembers","nameLocation":"959:12:1","nodeType":"VariableDeclaration","scope":390,"src":"909:62:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1479_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":388,"keyName":"role","keyNameLocation":"925:4:1","keyType":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"917:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"909:49:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1479_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":387,"nodeType":"UserDefinedTypeName","pathNode":{"id":386,"name":"EnumerableSet.AddressSet","nameLocations":["933:13:1","947:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"933:24:1"},"referencedDeclaration":1479,"src":"933:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"}],"name":"AccessControlEnumerableStorage","nameLocation":"868:30:1","nodeType":"StructDefinition","scope":563,"src":"861:117:1","visibility":"public"},{"constant":true,"id":393,"mutability":"constant","name":"AccessControlEnumerableStorageLocation","nameLocation":"1136:38:1","nodeType":"VariableDeclaration","scope":563,"src":"1111:132:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1111:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863316636666532343632316365383165633538323763616630323533636164623734373039623036313633306536623535653832333731373035393332303030","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1177:66:1","typeDescriptions":{"typeIdentifier":"t_rational_87732778178968556439956192144688703237987636878447527990685272173340959907840_by_1","typeString":"int_const 8773...(69 digits omitted)...7840"},"value":"0xc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000"},"visibility":"private"},{"body":{"id":400,"nodeType":"Block","src":"1360:97:1","statements":[{"AST":{"nodeType":"YulBlock","src":"1379:72:1","statements":[{"nodeType":"YulAssignment","src":"1393:48:1","value":{"name":"AccessControlEnumerableStorageLocation","nodeType":"YulIdentifier","src":"1403:38:1"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1393:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":397,"isOffset":false,"isSlot":true,"src":"1393:6:1","suffix":"slot","valueSize":1},{"declaration":393,"isOffset":false,"isSlot":false,"src":"1403:38:1","valueSize":1}],"id":399,"nodeType":"InlineAssembly","src":"1370:81:1"}]},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlEnumerableStorage","nameLocation":"1259:34:1","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"1293:2:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"$","nameLocation":"1357:1:1","nodeType":"VariableDeclaration","scope":401,"src":"1318:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"AccessControlEnumerableStorage","nameLocations":["1318:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"1318:30:1"},"referencedDeclaration":390,"src":"1318:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"src":"1317:42:1"},"scope":563,"src":"1250:207:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"1531:7:1","statements":[]},"id":407,"implemented":true,"kind":"function","modifiers":[{"id":404,"kind":"modifierInvocation","modifierName":{"id":403,"name":"onlyInitializing","nameLocations":["1514:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"1514:16:1"},"nodeType":"ModifierInvocation","src":"1514:16:1"}],"name":"__AccessControlEnumerable_init","nameLocation":"1472:30:1","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"1502:2:1"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"1531:0:1"},"scope":563,"src":"1463:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"1622:7:1","statements":[]},"id":413,"implemented":true,"kind":"function","modifiers":[{"id":410,"kind":"modifierInvocation","modifierName":{"id":409,"name":"onlyInitializing","nameLocations":["1605:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"1605:16:1"},"nodeType":"ModifierInvocation","src":"1605:16:1"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"1553:40:1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1593:2:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"1622:0:1"},"scope":563,"src":"1544:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[91],"body":{"id":434,"nodeType":"Block","src":"1786:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1803:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":424,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1823:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1141_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$1141_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1818:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$1141","typeString":"type(contract IAccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1849:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1818:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1803:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":430,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1888:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":428,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1864:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$563_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1870:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":91,"src":"1864:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1803:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":421,"id":433,"nodeType":"Return","src":"1796:104:1"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"1634:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1704:17:1","nodeType":"FunctionDefinition","overrides":{"id":418,"nodeType":"OverrideSpecifier","overrides":[],"src":"1762:8:1"},"parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"interfaceId","nameLocation":"1729:11:1","nodeType":"VariableDeclaration","scope":435,"src":"1722:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":415,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1722:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1721:20:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1780:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"1780:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1779:6:1"},"scope":563,"src":"1695:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1132],"body":{"id":459,"nodeType":"Block","src":"2582:143:1","statements":[{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"$","nameLocation":"2631:1:1","nodeType":"VariableDeclaration","scope":459,"src":"2592:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":446,"nodeType":"UserDefinedTypeName","pathNode":{"id":445,"name":"AccessControlEnumerableStorage","nameLocations":["2592:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2592:30:1"},"referencedDeclaration":390,"src":"2592:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":450,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":448,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2635:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2592:79:1"},{"expression":{"arguments":[{"id":456,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2712:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"expression":{"id":451,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2688:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2690:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"2688:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1479_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":454,"indexExpression":{"id":453,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2703:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2688:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2709:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"2688:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1479_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1479_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":444,"id":458,"nodeType":"Return","src":"2681:37:1"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1913:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"2501:13:1","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"role","nameLocation":"2523:4:1","nodeType":"VariableDeclaration","scope":460,"src":"2515:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2515:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"index","nameLocation":"2537:5:1","nodeType":"VariableDeclaration","scope":460,"src":"2529:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2514:29:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"2573:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2572:9:1"},"scope":563,"src":"2492:233:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1140],"body":{"id":481,"nodeType":"Block","src":"2973:142:1","statements":[{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"$","nameLocation":"3022:1:1","nodeType":"VariableDeclaration","scope":481,"src":"2983:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"AccessControlEnumerableStorage","nameLocations":["2983:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2983:30:1"},"referencedDeclaration":390,"src":"2983:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":473,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3026:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2983:79:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"expression":{"id":474,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3079:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3081:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3079:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1479_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":477,"indexExpression":{"id":476,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3094:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3079:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3100:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"3079:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1479_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1479_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":480,"nodeType":"Return","src":"3072:36:1"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"2731:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2902:18:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"role","nameLocation":"2929:4:1","nodeType":"VariableDeclaration","scope":482,"src":"2921:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2921:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2920:14:1"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"2964:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2964:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2963:9:1"},"scope":563,"src":"2893:222:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[315],"body":{"id":521,"nodeType":"Block","src":"3309:256:1","statements":[{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"$","nameLocation":"3358:1:1","nodeType":"VariableDeclaration","scope":521,"src":"3319:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":494,"nodeType":"UserDefinedTypeName","pathNode":{"id":493,"name":"AccessControlEnumerableStorage","nameLocations":["3319:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"3319:30:1"},"referencedDeclaration":390,"src":"3319:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":498,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":496,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3362:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3362:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3319:79:1"},{"assignments":[500],"declarations":[{"constant":false,"id":500,"mutability":"mutable","name":"granted","nameLocation":"3413:7:1","nodeType":"VariableDeclaration","scope":521,"src":"3408:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":499,"name":"bool","nodeType":"ElementaryTypeName","src":"3408:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":506,"initialValue":{"arguments":[{"id":503,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3440:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":504,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3446:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":501,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3423:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$563_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3429:10:1","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":315,"src":"3423:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3423:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3408:46:1"},{"condition":{"id":507,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3468:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":518,"nodeType":"IfStatement","src":"3464:71:1","trueBody":{"id":517,"nodeType":"Block","src":"3477:58:1","statements":[{"expression":{"arguments":[{"id":514,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3516:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":508,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3491:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3493:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3491:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1479_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":512,"indexExpression":{"id":510,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3506:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3491:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3512:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"3491:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1479_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1479_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":516,"nodeType":"ExpressionStatement","src":"3491:33:1"}]}},{"expression":{"id":519,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3551:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":492,"id":520,"nodeType":"Return","src":"3544:14:1"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3121:91:1","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"3226:10:1","nodeType":"FunctionDefinition","overrides":{"id":489,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:1"},"parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"role","nameLocation":"3245:4:1","nodeType":"VariableDeclaration","scope":522,"src":"3237:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3237:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"account","nameLocation":"3259:7:1","nodeType":"VariableDeclaration","scope":522,"src":"3251:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"3251:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:31:1"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3303:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":490,"name":"bool","nodeType":"ElementaryTypeName","src":"3303:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3302:6:1"},"scope":563,"src":"3217:348:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[361],"body":{"id":561,"nodeType":"Block","src":"3761:260:1","statements":[{"assignments":[535],"declarations":[{"constant":false,"id":535,"mutability":"mutable","name":"$","nameLocation":"3810:1:1","nodeType":"VariableDeclaration","scope":561,"src":"3771:40:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"},"typeName":{"id":534,"nodeType":"UserDefinedTypeName","pathNode":{"id":533,"name":"AccessControlEnumerableStorage","nameLocations":["3771:30:1"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"3771:30:1"},"referencedDeclaration":390,"src":"3771:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage"}},"visibility":"internal"}],"id":538,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":536,"name":"_getAccessControlEnumerableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3814:34:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlEnumerableStorage_$390_storage_ptr_$","typeString":"function () pure returns (struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3771:79:1"},{"assignments":[540],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"revoked","nameLocation":"3865:7:1","nodeType":"VariableDeclaration","scope":561,"src":"3860:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":539,"name":"bool","nodeType":"ElementaryTypeName","src":"3860:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":546,"initialValue":{"arguments":[{"id":543,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3893:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":544,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3899:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":541,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3875:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$563_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3881:11:1","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":361,"src":"3875:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3875:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3860:47:1"},{"condition":{"id":547,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"3921:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":558,"nodeType":"IfStatement","src":"3917:74:1","trueBody":{"id":557,"nodeType":"Block","src":"3930:61:1","statements":[{"expression":{"arguments":[{"id":554,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3972:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3944:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlEnumerableStorage_$390_storage_ptr","typeString":"struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3946:12:1","memberName":"_roleMembers","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3944:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1479_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":552,"indexExpression":{"id":550,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3959:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3944:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3965:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"3944:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1479_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1479_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3944:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"ExpressionStatement","src":"3944:36:1"}]}},{"expression":{"id":559,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4007:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":532,"id":560,"nodeType":"Return","src":"4000:14:1"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3571:92:1","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"3677:11:1","nodeType":"FunctionDefinition","overrides":{"id":529,"nodeType":"OverrideSpecifier","overrides":[],"src":"3737:8:1"},"parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"role","nameLocation":"3697:4:1","nodeType":"VariableDeclaration","scope":562,"src":"3689:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3689:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"account","nameLocation":"3711:7:1","nodeType":"VariableDeclaration","scope":562,"src":"3703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3688:31:1"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"3755:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":530,"name":"bool","nodeType":"ElementaryTypeName","src":"3755:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3754:6:1"},"scope":563,"src":"3668:353:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":564,"src":"592:3431:1","usedErrors":[580,583,1042,1045],"usedEvents":[588,1054,1063,1072]}],"src":"129:3895:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[817]},"id":818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"139:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":817,"linearizedBaseContracts":[817],"name":"Initializable","nameLocation":"2367:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"2387:293:2","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":574,"members":[{"constant":false,"id":570,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:2","nodeType":"VariableDeclaration","scope":574,"src":"2813:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":569,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:2","nodeType":"VariableDeclaration","scope":574,"src":"2950:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":572,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:2","nodeType":"StructDefinition","scope":817,"src":"2685:290:2","visibility":"public"},{"constant":true,"id":577,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:2","nodeType":"VariableDeclaration","scope":817,"src":"3098:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:2","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"3220:60:2","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":580,"name":"InvalidInitialization","nameLocation":"3291:21:2","nodeType":"ErrorDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"3312:2:2"},"src":"3285:30:2"},{"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"3321:57:2","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":583,"name":"NotInitializing","nameLocation":"3389:15:2","nodeType":"ErrorDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"3404:2:2"},"src":"3383:24:2"},{"anonymous":false,"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"3413:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":588,"name":"Initialized","nameLocation":"3514:11:2","nodeType":"EventDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:2","nodeType":"VariableDeclaration","scope":588,"src":"3526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":585,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:2"},"src":"3508:34:2"},{"body":{"id":670,"nodeType":"Block","src":"4092:1081:2","statements":[{"assignments":[593],"declarations":[{"constant":false,"id":593,"mutability":"mutable","name":"$","nameLocation":"4187:1:2","nodeType":"VariableDeclaration","scope":670,"src":"4158:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":592,"nodeType":"UserDefinedTypeName","pathNode":{"id":591,"name":"InitializableStorage","nameLocations":["4158:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":574,"src":"4158:20:2"},"referencedDeclaration":574,"src":"4158:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":594,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"4191:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$574_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:2"},{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:2","nodeType":"VariableDeclaration","scope":670,"src":"4279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":597,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":602,"initialValue":{"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:2","subExpression":{"expression":{"id":599,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"4302:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:2"},{"assignments":[604],"declarations":[{"constant":false,"id":604,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:2","nodeType":"VariableDeclaration","scope":670,"src":"4327:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":603,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":607,"initialValue":{"expression":{"id":605,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"4348:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:2"},{"assignments":[609],"declarations":[{"constant":false,"id":609,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:2","nodeType":"VariableDeclaration","scope":670,"src":"4706:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":608,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":615,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4726:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":613,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4746:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:2"},{"assignments":[617],"declarations":[{"constant":false,"id":617,"mutability":"mutable","name":"construction","nameLocation":"4775:12:2","nodeType":"VariableDeclaration","scope":670,"src":"4770:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":616,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":630,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":618,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4790:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":623,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$817","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$817","typeString":"contract Initializable"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:2","memberName":"code","nodeType":"MemberAccess","src":"4810:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:2","memberName":"length","nodeType":"MemberAccess","src":"4810:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:2","subExpression":{"id":631,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4856:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:2","subExpression":{"id":633,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4873:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":640,"nodeType":"IfStatement","src":"4851:91:2","trueBody":{"id":639,"nodeType":"Block","src":"4887:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":636,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4908:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"RevertStatement","src":"4901:30:2"}]}},{"expression":{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":641,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4951:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"4951:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":646,"nodeType":"ExpressionStatement","src":"4951:18:2"},{"condition":{"id":647,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4983:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":655,"nodeType":"IfStatement","src":"4979:67:2","trueBody":{"id":654,"nodeType":"Block","src":"4999:47:2","statements":[{"expression":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":648,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5013:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"5013:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"ExpressionStatement","src":"5013:22:2"}]}},{"id":656,"nodeType":"PlaceholderStatement","src":"5055:1:2"},{"condition":{"id":657,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5070:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":669,"nodeType":"IfStatement","src":"5066:101:2","trueBody":{"id":668,"nodeType":"Block","src":"5086:81:2","statements":[{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":658,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5100:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"5100:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"ExpressionStatement","src":"5100:23:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":664,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5142:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"EmitStatement","src":"5137:19:2"}]}}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"3548:516:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":671,"name":"initializer","nameLocation":"4078:11:2","nodeType":"ModifierDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"4089:2:2"},"src":"4069:1104:2","virtual":false,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"6291:392:2","statements":[{"assignments":[678],"declarations":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"6386:1:2","nodeType":"VariableDeclaration","scope":717,"src":"6357:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"InitializableStorage","nameLocations":["6357:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":574,"src":"6357:20:2"},"referencedDeclaration":574,"src":"6357:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":679,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"6390:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$574_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":682,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6431:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"6431:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":684,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6450:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"6450:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":686,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6468:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"6427:105:2","trueBody":{"id":692,"nodeType":"Block","src":"6477:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":689,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6498:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"6491:30:2"}]}},{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":694,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6541:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"6541:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":697,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6558:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":699,"nodeType":"ExpressionStatement","src":"6541:24:2"},{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":700,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6575:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"6575:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"nodeType":"ExpressionStatement","src":"6575:22:2"},{"id":706,"nodeType":"PlaceholderStatement","src":"6607:1:2"},{"expression":{"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":707,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6618:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"6618:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"nodeType":"ExpressionStatement","src":"6618:23:2"},{"eventCall":{"arguments":[{"id":714,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":713,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6656:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"EmitStatement","src":"6651:25:2"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5179:1068:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":718,"name":"reinitializer","nameLocation":"6261:13:2","nodeType":"ModifierDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"version","nameLocation":"6282:7:2","nodeType":"VariableDeclaration","scope":718,"src":"6275:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":673,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:2"},"src":"6252:431:2","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"6921:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6931:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"6931:20:2"},{"id":724,"nodeType":"PlaceholderStatement","src":"6961:1:2"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"6689:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":726,"name":"onlyInitializing","nameLocation":"6902:16:2","nodeType":"ModifierDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"6918:2:2"},"src":"6893:76:2","virtual":false,"visibility":"internal"},{"body":{"id":738,"nodeType":"Block","src":"7136:89:2","statements":[{"condition":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":730,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7151:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":737,"nodeType":"IfStatement","src":"7146:73:2","trueBody":{"id":736,"nodeType":"Block","src":"7170:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":733,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7191:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"RevertStatement","src":"7184:24:2"}]}}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"6975:104:2","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:2","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"7111:2:2"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"7136:0:2"},"scope":817,"src":"7084:141:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":784,"nodeType":"Block","src":"7760:373:2","statements":[{"assignments":[745],"declarations":[{"constant":false,"id":745,"mutability":"mutable","name":"$","nameLocation":"7855:1:2","nodeType":"VariableDeclaration","scope":784,"src":"7826:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"InitializableStorage","nameLocations":["7826:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":574,"src":"7826:20:2"},"referencedDeclaration":574,"src":"7826:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":748,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":746,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7859:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$574_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:2"},{"condition":{"expression":{"id":749,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"7900:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"7900:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":755,"nodeType":"IfStatement","src":"7896:76:2","trueBody":{"id":754,"nodeType":"Block","src":"7917:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"7938:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"RevertStatement","src":"7931:30:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":756,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"7985:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"7985:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":759,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":758,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:2","memberName":"max","nodeType":"MemberAccess","src":"8003:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":783,"nodeType":"IfStatement","src":"7981:146:2","trueBody":{"id":782,"nodeType":"Block","src":"8021:106:2","statements":[{"expression":{"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":764,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8035:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"8035:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":768,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:2","memberName":"max","nodeType":"MemberAccess","src":"8052:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":773,"nodeType":"ExpressionStatement","src":"8035:33:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":776,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":775,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:2","memberName":"max","nodeType":"MemberAccess","src":"8099:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":774,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8087:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"EmitStatement","src":"8082:34:2"}]}}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"7231:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:2","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"7740:2:2"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"7760:0:2"},"scope":817,"src":"7711:422:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"8308:63:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":791,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"8325:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$574_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":570,"src":"8325:39:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":790,"id":794,"nodeType":"Return","src":"8318:46:2"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"8139:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:2","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"8274:2:2"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"8300:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":788,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:2"},"scope":817,"src":"8243:128:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"8543:64:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":802,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"8560:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$574_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":573,"src":"8560:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":801,"id":805,"nodeType":"Return","src":"8553:47:2"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"8377:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:2","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"8511:2:2"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":807,"src":"8537:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":799,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:2"},"scope":817,"src":"8487:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"8827:80:2","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:2","statements":[{"nodeType":"YulAssignment","src":"8860:31:2","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:2"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":812,"isOffset":false,"isSlot":true,"src":"8860:6:2","suffix":"slot","valueSize":1},{"declaration":577,"isOffset":false,"isSlot":false,"src":"8870:21:2","valueSize":1}],"id":814,"nodeType":"InlineAssembly","src":"8837:64:2"}]},"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"8613:67:2","text":" @dev Returns a pointer to the storage namespace."},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:2","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"8770:2:2"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"$","nameLocation":"8824:1:2","nodeType":"VariableDeclaration","scope":816,"src":"8795:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":811,"nodeType":"UserDefinedTypeName","pathNode":{"id":810,"name":"InitializableStorage","nameLocations":["8795:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":574,"src":"8795:20:2"},"referencedDeclaration":574,"src":"8795:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$574_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:2"},"scope":817,"src":"8737:170:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":818,"src":"2349:6560:2","usedErrors":[580,583],"usedEvents":[588]}],"src":"113:8797:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[863],"Initializable":[817]},"id":864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":819,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":864,"sourceUnit":818,"src":"126:63:3","symbolAliases":[{"foreign":{"id":820,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":823,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":817,"src":"728:13:3"},"id":824,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":863,"linearizedBaseContracts":[863,817],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":829,"nodeType":"Block","src":"800:7:3","statements":[]},"id":830,"implemented":true,"kind":"function","modifiers":[{"id":827,"kind":"modifierInvocation","modifierName":{"id":826,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":863,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"875:7:3","statements":[]},"id":836,"implemented":true,"kind":"function","modifiers":[{"id":833,"kind":"modifierInvocation","modifierName":{"id":832,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":863,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":841,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":840,"id":843,"nodeType":"Return","src":"959:17:3"}]},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":863,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":849,"id":852,"nodeType":"Return","src":"1066:15:3"}]},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":847,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":863,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":858,"id":860,"nodeType":"Return","src":"1176:8:3"}]},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":863,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":864,"src":"688:505:3","usedErrors":[580,583],"usedEvents":[588]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[817],"ReentrancyGuardUpgradeable":[992]},"id":993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":865,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":993,"sourceUnit":818,"src":"134:63:4","symbolAliases":[{"foreign":{"id":866,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"142:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":869,"name":"Initializable","nameLocations":["998:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":817,"src":"998:13:4"},"id":870,"nodeType":"InheritanceSpecifier","src":"998:13:4"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"199:750:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":992,"linearizedBaseContracts":[992,817],"name":"ReentrancyGuardUpgradeable","nameLocation":"968:26:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":873,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1791:11:4","nodeType":"VariableDeclaration","scope":992,"src":"1766:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":876,"mutability":"constant","name":"ENTERED","nameLocation":"1837:7:4","nodeType":"VariableDeclaration","scope":992,"src":"1812:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"1855:73:4","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":880,"members":[{"constant":false,"id":879,"mutability":"mutable","name":"_status","nameLocation":"1981:7:4","nodeType":"VariableDeclaration","scope":880,"src":"1973:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"1940:22:4","nodeType":"StructDefinition","scope":992,"src":"1933:62:4","visibility":"public"},{"constant":true,"id":883,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2145:30:4","nodeType":"VariableDeclaration","scope":992,"src":"2120:124:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:66:4","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":890,"nodeType":"Block","src":"2345:89:4","statements":[{"AST":{"nodeType":"YulBlock","src":"2364:64:4","statements":[{"nodeType":"YulAssignment","src":"2378:40:4","value":{"name":"ReentrancyGuardStorageLocation","nodeType":"YulIdentifier","src":"2388:30:4"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2378:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":887,"isOffset":false,"isSlot":true,"src":"2378:6:4","suffix":"slot","valueSize":1},{"declaration":883,"isOffset":false,"isSlot":false,"src":"2388:30:4","valueSize":1}],"id":889,"nodeType":"InlineAssembly","src":"2355:73:4"}]},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2260:26:4","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"2286:2:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"$","nameLocation":"2342:1:4","nodeType":"VariableDeclaration","scope":891,"src":"2311:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":886,"nodeType":"UserDefinedTypeName","pathNode":{"id":885,"name":"ReentrancyGuardStorage","nameLocations":["2311:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":880,"src":"2311:22:4"},"referencedDeclaration":880,"src":"2311:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2310:34:4"},"scope":992,"src":"2251:183:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"2440:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":894,"name":"ReentrancyGuardReentrantCall","nameLocation":"2503:28:4","nodeType":"ErrorDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"2531:2:4"},"src":"2497:37:4"},{"body":{"id":902,"nodeType":"Block","src":"2600:51:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":899,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2610:32:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"2610:34:4"}]},"id":903,"implemented":true,"kind":"function","modifiers":[{"id":897,"kind":"modifierInvocation","modifierName":{"id":896,"name":"onlyInitializing","nameLocations":["2583:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"2583:16:4"},"nodeType":"ModifierInvocation","src":"2583:16:4"}],"name":"__ReentrancyGuard_init","nameLocation":"2549:22:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"2571:2:4"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2600:0:4"},"scope":992,"src":"2540:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"2727:113:4","statements":[{"assignments":[910],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"$","nameLocation":"2768:1:4","nodeType":"VariableDeclaration","scope":920,"src":"2737:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"ReentrancyGuardStorage","nameLocations":["2737:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":880,"src":"2737:22:4"},"referencedDeclaration":880,"src":"2737:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2772:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$880_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2737:63:4"},{"expression":{"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":914,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2810:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2812:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":879,"src":"2810:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":917,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2822:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":919,"nodeType":"ExpressionStatement","src":"2810:23:4"}]},"id":921,"implemented":true,"kind":"function","modifiers":[{"id":906,"kind":"modifierInvocation","modifierName":{"id":905,"name":"onlyInitializing","nameLocations":["2710:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"2710:16:4"},"nodeType":"ModifierInvocation","src":"2710:16:4"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2666:32:4","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"2698:2:4"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"2727:0:4"},"scope":992,"src":"2657:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"3241:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":924,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3251:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"3251:21:4"},{"id":927,"nodeType":"PlaceholderStatement","src":"3282:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":928,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"3293:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":930,"nodeType":"ExpressionStatement","src":"3293:20:4"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"2846:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":932,"name":"nonReentrant","nameLocation":"3226:12:4","nodeType":"ModifierDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"3238:2:4"},"src":"3217:103:4","virtual":false,"visibility":"internal"},{"body":{"id":956,"nodeType":"Block","src":"3365:345:4","statements":[{"assignments":[937],"declarations":[{"constant":false,"id":937,"mutability":"mutable","name":"$","nameLocation":"3406:1:4","nodeType":"VariableDeclaration","scope":956,"src":"3375:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":936,"nodeType":"UserDefinedTypeName","pathNode":{"id":935,"name":"ReentrancyGuardStorage","nameLocations":["3375:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":880,"src":"3375:22:4"},"referencedDeclaration":880,"src":"3375:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":940,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":938,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3410:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$880_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3375:63:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":941,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3526:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":879,"src":"3526:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":943,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"3539:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":949,"nodeType":"IfStatement","src":"3522:88:4","trueBody":{"id":948,"nodeType":"Block","src":"3548:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":945,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"3569:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"RevertStatement","src":"3562:37:4"}]}},{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":950,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3684:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3686:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":879,"src":"3684:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":953,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"3696:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":955,"nodeType":"ExpressionStatement","src":"3684:19:4"}]},"id":957,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3335:19:4","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"3354:2:4"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"3365:0:4"},"scope":992,"src":"3326:384:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":972,"nodeType":"Block","src":"3754:245:4","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"$","nameLocation":"3795:1:4","nodeType":"VariableDeclaration","scope":972,"src":"3764:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":961,"nodeType":"UserDefinedTypeName","pathNode":{"id":960,"name":"ReentrancyGuardStorage","nameLocations":["3764:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":880,"src":"3764:22:4"},"referencedDeclaration":880,"src":"3764:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":965,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":963,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3799:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$880_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3764:63:4"},{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":966,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3969:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3971:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":879,"src":"3969:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":969,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"3981:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":971,"nodeType":"ExpressionStatement","src":"3969:23:4"}]},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3725:18:4","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"3743:2:4"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"3754:0:4"},"scope":992,"src":"3716:283:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":990,"nodeType":"Block","src":"4242:117:4","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"$","nameLocation":"4283:1:4","nodeType":"VariableDeclaration","scope":990,"src":"4252:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":980,"nodeType":"UserDefinedTypeName","pathNode":{"id":979,"name":"ReentrancyGuardStorage","nameLocations":["4252:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":880,"src":"4252:22:4"},"referencedDeclaration":880,"src":"4252:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4287:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$880_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4252:63:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"4332:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$880_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4334:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":879,"src":"4332:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":987,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"4345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":978,"id":989,"nodeType":"Return","src":"4325:27:4"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"4005:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4187:23:4","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"4210:2:4"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"4236:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"4236:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:6:4"},"scope":992,"src":"4178:181:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":993,"src":"950:3411:4","usedErrors":[580,583,894],"usedEvents":[588]}],"src":"109:4253:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1032],"IERC165":[1153],"Initializable":[817]},"id":1033,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":994,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1033,"sourceUnit":1154,"src":"140:80:5","symbolAliases":[{"foreign":{"id":995,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1033,"sourceUnit":818,"src":"221:66:5","symbolAliases":[{"foreign":{"id":997,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"229:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1000,"name":"Initializable","nameLocations":["807:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":817,"src":"807:13:5"},"id":1001,"nodeType":"InheritanceSpecifier","src":"807:13:5"},{"baseName":{"id":1002,"name":"IERC165","nameLocations":["822:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1153,"src":"822:7:5"},"id":1003,"nodeType":"InheritanceSpecifier","src":"822:7:5"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"289:478:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1032,"linearizedBaseContracts":[1032,1153,817],"name":"ERC165Upgradeable","nameLocation":"786:17:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1008,"nodeType":"Block","src":"887:7:5","statements":[]},"id":1009,"implemented":true,"kind":"function","modifiers":[{"id":1006,"kind":"modifierInvocation","modifierName":{"id":1005,"name":"onlyInitializing","nameLocations":["870:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"870:16:5"},"nodeType":"ModifierInvocation","src":"870:16:5"}],"name":"__ERC165_init","nameLocation":"845:13:5","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"858:2:5"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"887:0:5"},"scope":1032,"src":"836:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1014,"nodeType":"Block","src":"961:7:5","statements":[]},"id":1015,"implemented":true,"kind":"function","modifiers":[{"id":1012,"kind":"modifierInvocation","modifierName":{"id":1011,"name":"onlyInitializing","nameLocations":["944:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"944:16:5"},"nodeType":"ModifierInvocation","src":"944:16:5"}],"name":"__ERC165_init_unchained","nameLocation":"909:23:5","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"932:2:5"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"961:0:5"},"scope":1032,"src":"900:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1152],"body":{"id":1030,"nodeType":"Block","src":"1116:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1133:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1025,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1153:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1153_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1153_$","typeString":"type(contract IERC165)"}],"id":1024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1148:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1153","typeString":"type(contract IERC165)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1162:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1148:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1133:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1022,"id":1029,"nodeType":"Return","src":"1126:47:5"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"973:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1043:17:5","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"interfaceId","nameLocation":"1068:11:5","nodeType":"VariableDeclaration","scope":1031,"src":"1061:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1017,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1061:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1060:20:5"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"1110:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"1110:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1109:6:5"},"scope":1032,"src":"1034:146:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1033,"src":"768:414:5","usedErrors":[580,583],"usedEvents":[588]}],"src":"114:1069:5"},"id":5},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1115]},"id":1116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1034,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"135:89:6","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":1115,"linearizedBaseContracts":[1115],"name":"IAccessControl","nameLocation":"235:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"256:56:6","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1042,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:6","nodeType":"ErrorDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"account","nameLocation":"364:7:6","nodeType":"VariableDeclaration","scope":1042,"src":"356:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:6","nodeType":"VariableDeclaration","scope":1042,"src":"373:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:6"},"src":"317:76:6"},{"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"399:148:6","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1045,"name":"AccessControlBadConfirmation","nameLocation":"558:28:6","nodeType":"ErrorDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"586:2:6"},"src":"552:37:6"},{"anonymous":false,"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"595:254:6","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1054,"name":"RoleAdminChanged","nameLocation":"860:16:6","nodeType":"EventDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":1054,"src":"877:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1050,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:6","nodeType":"VariableDeclaration","scope":1054,"src":"899:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1052,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:6","nodeType":"VariableDeclaration","scope":1054,"src":"934:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:6"},"src":"854:110:6"},{"anonymous":false,"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"970:212:6","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1063,"name":"RoleGranted","nameLocation":"1193:11:6","nodeType":"EventDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:6","nodeType":"VariableDeclaration","scope":1063,"src":"1205:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1059,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:6","nodeType":"VariableDeclaration","scope":1063,"src":"1227:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:6","nodeType":"VariableDeclaration","scope":1063,"src":"1252:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:6"},"src":"1187:89:6"},{"anonymous":false,"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"1282:275:6","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1072,"name":"RoleRevoked","nameLocation":"1568:11:6","nodeType":"EventDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:6","nodeType":"VariableDeclaration","scope":1072,"src":"1580:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1068,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:6","nodeType":"VariableDeclaration","scope":1072,"src":"1602:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:6","nodeType":"VariableDeclaration","scope":1072,"src":"1627:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:6"},"src":"1562:89:6"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"1657:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1082,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:6","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"role","nameLocation":"1763:4:6","nodeType":"VariableDeclaration","scope":1082,"src":"1755:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"account","nameLocation":"1777:7:6","nodeType":"VariableDeclaration","scope":1082,"src":"1769:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:6"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"1809:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:6"},"scope":1115,"src":"1738:77:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"1821:184:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1090,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:6","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"role","nameLocation":"2040:4:6","nodeType":"VariableDeclaration","scope":1090,"src":"2032:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:6"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"2069:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:6"},"scope":1115,"src":"2010:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"2084:239:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1098,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:6","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"role","nameLocation":"2355:4:6","nodeType":"VariableDeclaration","scope":1098,"src":"2347:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"account","nameLocation":"2369:7:6","nodeType":"VariableDeclaration","scope":1098,"src":"2361:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:6"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"2386:0:6"},"scope":1115,"src":"2328:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"2393:223:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1106,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:6","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"role","nameLocation":"2649:4:6","nodeType":"VariableDeclaration","scope":1106,"src":"2641:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"account","nameLocation":"2663:7:6","nodeType":"VariableDeclaration","scope":1106,"src":"2655:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:6"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[],"src":"2680:0:6"},"scope":1115,"src":"2621:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"2687:491:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1114,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:6","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"role","nameLocation":"3213:4:6","nodeType":"VariableDeclaration","scope":1114,"src":"3205:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:6","nodeType":"VariableDeclaration","scope":1114,"src":"3219:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:6"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"3255:0:6"},"scope":1115,"src":"3183:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1116,"src":"225:3033:6","usedErrors":[1042,1045],"usedEvents":[1054,1063,1072]}],"src":"109:3150:6"},"id":6},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[1115],"IAccessControlEnumerable":[1141]},"id":1142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1117,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:7"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":1119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1142,"sourceUnit":1116,"src":"156:53:7","symbolAliases":[{"foreign":{"id":1118,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"164:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1121,"name":"IAccessControl","nameLocations":["349:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"349:14:7"},"id":1122,"nodeType":"InheritanceSpecifier","src":"349:14:7"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"211:99:7","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":1141,"linearizedBaseContracts":[1141,1115],"name":"IAccessControlEnumerable","nameLocation":"321:24:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"370:574:7","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":1132,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"958:13:7","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"role","nameLocation":"980:4:7","nodeType":"VariableDeclaration","scope":1132,"src":"972:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"index","nameLocation":"994:5:7","nodeType":"VariableDeclaration","scope":1132,"src":"986:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:29:7"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"1024:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1023:9:7"},"scope":1141,"src":"949:84:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"1039:157:7","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":1140,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1210:18:7","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"role","nameLocation":"1237:4:7","nodeType":"VariableDeclaration","scope":1140,"src":"1229:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1229:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1228:14:7"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"1266:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:9:7"},"scope":1141,"src":"1201:74:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1142,"src":"311:966:7","usedErrors":[1042,1045],"usedEvents":[1054,1063,1072]}],"src":"130:1148:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1153]},"id":1154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1143,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"141:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1153,"linearizedBaseContracts":[1153],"name":"IERC165","nameLocation":"431:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"445:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1152,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:8","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:8","nodeType":"VariableDeclaration","scope":1152,"src":"817:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1146,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:8"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"860:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1149,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:8"},"scope":1153,"src":"790:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1154,"src":"421:447:8","usedErrors":[],"usedEvents":[]}],"src":"115:754:8"},"id":8},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[1766]},"id":1767,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"231:1098:9","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1766,"linearizedBaseContracts":[1766],"name":"EnumerableSet","nameLocation":"1338:13:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1164,"members":[{"constant":false,"id":1159,"mutability":"mutable","name":"_values","nameLocation":"1862:7:9","nodeType":"VariableDeclaration","scope":1164,"src":"1852:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1158,"nodeType":"ArrayTypeName","src":"1852:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:9","nodeType":"VariableDeclaration","scope":1164,"src":"2020:44:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1162,"keyName":"value","keyNameLocation":"2036:5:9","keyType":{"id":1160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:9","nodeType":"StructDefinition","scope":1766,"src":"1798:273:9","visibility":"public"},{"body":{"id":1205,"nodeType":"Block","src":"2310:337:9","statements":[{"condition":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:9","subExpression":{"arguments":[{"id":1176,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2335:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2340:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1175,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2325:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1203,"nodeType":"Block","src":"2604:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1174,"id":1202,"nodeType":"Return","src":"2618:12:9"}]},"id":1204,"nodeType":"IfStatement","src":"2320:321:9","trueBody":{"id":1200,"nodeType":"Block","src":"2348:250:9","statements":[{"expression":{"arguments":[{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2379:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1180,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2362:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"2362:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:9","memberName":"push","nodeType":"MemberAccess","src":"2362:16:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"2362:23:9"},{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1188,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2520:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"2520:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1192,"indexExpression":{"id":1190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2535:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1193,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2544:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"2544:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:9","memberName":"length","nodeType":"MemberAccess","src":"2544:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1197,"nodeType":"ExpressionStatement","src":"2520:42:9"},{"expression":{"hexValue":"74727565","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1174,"id":1199,"nodeType":"Return","src":"2576:11:9"}]}}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"2077:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:9","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"set","nameLocation":"2267:3:9","nodeType":"VariableDeclaration","scope":1206,"src":"2255:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1167,"nodeType":"UserDefinedTypeName","pathNode":{"id":1166,"name":"Set","nameLocations":["2255:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"2255:3:9"},"referencedDeclaration":1164,"src":"2255:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"value","nameLocation":"2280:5:9","nodeType":"VariableDeclaration","scope":1206,"src":"2272:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:9"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2304:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1172,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:9"},"scope":1766,"src":"2241:406:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1289,"nodeType":"Block","src":"2887:1296:9","statements":[{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"position","nameLocation":"2999:8:9","nodeType":"VariableDeclaration","scope":1289,"src":"2991:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1223,"initialValue":{"baseExpression":{"expression":{"id":1219,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3010:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"3010:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1222,"indexExpression":{"id":1221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"3025:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3046:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1287,"nodeType":"Block","src":"4140:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1216,"id":1286,"nodeType":"Return","src":"4154:12:9"}]},"id":1288,"nodeType":"IfStatement","src":"3042:1135:9","trueBody":{"id":1284,"nodeType":"Block","src":"3061:1073:9","statements":[{"assignments":[1228],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:9","nodeType":"VariableDeclaration","scope":1284,"src":"3413:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1229,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3434:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:9"},{"assignments":[1234],"declarations":[{"constant":false,"id":1234,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:9","nodeType":"VariableDeclaration","scope":1284,"src":"3460:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1235,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3480:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"3480:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:9","memberName":"length","nodeType":"MemberAccess","src":"3480:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3521:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1242,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"3535:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"nodeType":"IfStatement","src":"3517:378:9","trueBody":{"id":1267,"nodeType":"Block","src":"3546:349:9","statements":[{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:9","nodeType":"VariableDeclaration","scope":1267,"src":"3564:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1250,"initialValue":{"baseExpression":{"expression":{"id":1246,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3584:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"3584:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1249,"indexExpression":{"id":1248,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"3596:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:9"},{"expression":{"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1251,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3705:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"3705:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1255,"indexExpression":{"id":1253,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3717:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1256,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3731:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1258,"nodeType":"ExpressionStatement","src":"3705:35:9"},{"expression":{"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1259,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3844:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"3844:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1263,"indexExpression":{"id":1261,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3859:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1264,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3872:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1266,"nodeType":"ExpressionStatement","src":"3844:36:9"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1269,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3973:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"3973:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:9","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"ExpressionStatement","src":"3973:17:9"},{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:9","subExpression":{"baseExpression":{"expression":{"id":1276,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4076:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"4076:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1279,"indexExpression":{"id":1278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4091:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"ExpressionStatement","src":"4069:28:9"},{"expression":{"hexValue":"74727565","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1216,"id":1283,"nodeType":"Return","src":"4112:11:9"}]}}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2653:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:9","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"set","nameLocation":"2844:3:9","nodeType":"VariableDeclaration","scope":1290,"src":"2832:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"Set","nameLocations":["2832:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"2832:3:9"},"referencedDeclaration":1164,"src":"2832:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"value","nameLocation":"2857:5:9","nodeType":"VariableDeclaration","scope":1290,"src":"2849:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:9"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"2881:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:9"},"scope":1766,"src":"2815:1368:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1308,"nodeType":"Block","src":"4343:50:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1301,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4360:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:9","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"4360:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1304,"indexExpression":{"id":1303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"4375:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1300,"id":1307,"nodeType":"Return","src":"4353:33:9"}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"4189:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:9","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"set","nameLocation":"4295:3:9","nodeType":"VariableDeclaration","scope":1309,"src":"4283:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1293,"nodeType":"UserDefinedTypeName","pathNode":{"id":1292,"name":"Set","nameLocations":["4283:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"4283:3:9"},"referencedDeclaration":1164,"src":"4283:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"value","nameLocation":"4308:5:9","nodeType":"VariableDeclaration","scope":1309,"src":"4300:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:9"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1309,"src":"4337:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1298,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:9"},"scope":1766,"src":"4264:129:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1322,"nodeType":"Block","src":"4539:42:9","statements":[{"expression":{"expression":{"expression":{"id":1318,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"4556:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"4556:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:9","memberName":"length","nodeType":"MemberAccess","src":"4556:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1317,"id":1321,"nodeType":"Return","src":"4549:25:9"}]},"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"4399:70:9","text":" @dev Returns the number of values on the set. O(1)."},"id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:9","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"set","nameLocation":"4503:3:9","nodeType":"VariableDeclaration","scope":1323,"src":"4491:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1312,"nodeType":"UserDefinedTypeName","pathNode":{"id":1311,"name":"Set","nameLocations":["4491:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"4491:3:9"},"referencedDeclaration":1164,"src":"4491:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:9"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"4530:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:9"},"scope":1766,"src":"4474:107:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1339,"nodeType":"Block","src":"4999:42:9","statements":[{"expression":{"baseExpression":{"expression":{"id":1334,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"5016:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"5016:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1337,"indexExpression":{"id":1336,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5028:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1333,"id":1338,"nodeType":"Return","src":"5009:25:9"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"4587:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:9","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"set","nameLocation":"4948:3:9","nodeType":"VariableDeclaration","scope":1340,"src":"4936:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1326,"nodeType":"UserDefinedTypeName","pathNode":{"id":1325,"name":"Set","nameLocations":["4936:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"4936:3:9"},"referencedDeclaration":1164,"src":"4936:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"index","nameLocation":"4961:5:9","nodeType":"VariableDeclaration","scope":1340,"src":"4953:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:9"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1340,"src":"4990:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:9"},"scope":1766,"src":"4923:118:9","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1353,"nodeType":"Block","src":"5655:35:9","statements":[{"expression":{"expression":{"id":1350,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"5672:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:9","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"5672:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1349,"id":1352,"nodeType":"Return","src":"5665:18:9"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"5047:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:9","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"set","nameLocation":"5610:3:9","nodeType":"VariableDeclaration","scope":1354,"src":"5598:15:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1343,"nodeType":"UserDefinedTypeName","pathNode":{"id":1342,"name":"Set","nameLocations":["5598:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"5598:3:9"},"referencedDeclaration":1164,"src":"5598:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:9"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"5637:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1347,"nodeType":"ArrayTypeName","src":"5637:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:9"},"scope":1766,"src":"5581:109:9","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1358,"members":[{"constant":false,"id":1357,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:9","nodeType":"VariableDeclaration","scope":1358,"src":"5743:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1356,"nodeType":"UserDefinedTypeName","pathNode":{"id":1355,"name":"Set","nameLocations":["5743:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"5743:3:9"},"referencedDeclaration":1164,"src":"5743:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:9","nodeType":"StructDefinition","scope":1766,"src":"5715:45:9","visibility":"public"},{"body":{"id":1375,"nodeType":"Block","src":"6006:47:9","statements":[{"expression":{"arguments":[{"expression":{"id":1370,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"6028:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"6028:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"6040:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1369,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"6023:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1368,"id":1374,"nodeType":"Return","src":"6016:30:9"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"5766:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:9","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"set","nameLocation":"5962:3:9","nodeType":"VariableDeclaration","scope":1376,"src":"5943:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"Bytes32Set","nameLocations":["5943:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"5943:10:9"},"referencedDeclaration":1358,"src":"5943:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"value","nameLocation":"5975:5:9","nodeType":"VariableDeclaration","scope":1376,"src":"5967:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:9"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"6000:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1366,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:9"},"scope":1766,"src":"5930:123:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"6300:50:9","statements":[{"expression":{"arguments":[{"expression":{"id":1388,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"6325:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"6325:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"6337:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1387,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6317:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1386,"id":1392,"nodeType":"Return","src":"6310:33:9"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"6059:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:9","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"set","nameLocation":"6256:3:9","nodeType":"VariableDeclaration","scope":1394,"src":"6237:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1379,"nodeType":"UserDefinedTypeName","pathNode":{"id":1378,"name":"Bytes32Set","nameLocations":["6237:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"6237:10:9"},"referencedDeclaration":1358,"src":"6237:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"value","nameLocation":"6269:5:9","nodeType":"VariableDeclaration","scope":1394,"src":"6261:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:9"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"6294:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1384,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:9"},"scope":1766,"src":"6221:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1411,"nodeType":"Block","src":"6517:52:9","statements":[{"expression":{"arguments":[{"expression":{"id":1406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"6544:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"6544:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6556:5:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1405,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6534:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1404,"id":1410,"nodeType":"Return","src":"6527:35:9"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"6356:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:9","nodeType":"FunctionDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"set","nameLocation":"6468:3:9","nodeType":"VariableDeclaration","scope":1412,"src":"6449:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1397,"nodeType":"UserDefinedTypeName","pathNode":{"id":1396,"name":"Bytes32Set","nameLocations":["6449:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"6449:10:9"},"referencedDeclaration":1358,"src":"6449:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"6481:5:9","nodeType":"VariableDeclaration","scope":1412,"src":"6473:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:9"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1412,"src":"6511:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:9"},"scope":1766,"src":"6431:138:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1426,"nodeType":"Block","src":"6722:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":1422,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"6747:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"6747:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1421,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"6739:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1420,"id":1425,"nodeType":"Return","src":"6732:26:9"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"6575:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:9","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"set","nameLocation":"6685:3:9","nodeType":"VariableDeclaration","scope":1427,"src":"6666:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1415,"nodeType":"UserDefinedTypeName","pathNode":{"id":1414,"name":"Bytes32Set","nameLocations":["6666:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"6666:10:9"},"referencedDeclaration":1358,"src":"6666:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:9"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"6713:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:9"},"scope":1766,"src":"6650:115:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"7190:46:9","statements":[{"expression":{"arguments":[{"expression":{"id":1439,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7211:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"7211:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1441,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"7223:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7207:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1437,"id":1443,"nodeType":"Return","src":"7200:29:9"}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"6771:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:9","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"set","nameLocation":"7138:3:9","nodeType":"VariableDeclaration","scope":1445,"src":"7119:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1430,"nodeType":"UserDefinedTypeName","pathNode":{"id":1429,"name":"Bytes32Set","nameLocations":["7119:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"7119:10:9"},"referencedDeclaration":1358,"src":"7119:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"index","nameLocation":"7151:5:9","nodeType":"VariableDeclaration","scope":1445,"src":"7143:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:9"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"7181:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:9"},"scope":1766,"src":"7107:129:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"7857:219:9","statements":[{"assignments":[1459],"declarations":[{"constant":false,"id":1459,"mutability":"mutable","name":"store","nameLocation":"7884:5:9","nodeType":"VariableDeclaration","scope":1474,"src":"7867:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1458,"nodeType":"ArrayTypeName","src":"7867:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1464,"initialValue":{"arguments":[{"expression":{"id":1461,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7900:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1357,"src":"7900:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1460,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"7892:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:9"},{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"result","nameLocation":"7938:6:9","nodeType":"VariableDeclaration","scope":1474,"src":"7921:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1468,"nodeType":"ArrayTypeName","src":"7921:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1470,"nodeType":"VariableDeclarationStatement","src":"7921:23:9"},{"AST":{"nodeType":"YulBlock","src":"8007:39:9","statements":[{"nodeType":"YulAssignment","src":"8021:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1469,"isOffset":false,"isSlot":false,"src":"8021:6:9","valueSize":1},{"declaration":1459,"isOffset":false,"isSlot":false,"src":"8031:5:9","valueSize":1}],"id":1471,"nodeType":"InlineAssembly","src":"7998:48:9"},{"expression":{"id":1472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"8063:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1454,"id":1473,"nodeType":"Return","src":"8056:13:9"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"7242:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:9","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"set","nameLocation":"7811:3:9","nodeType":"VariableDeclaration","scope":1475,"src":"7792:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1448,"nodeType":"UserDefinedTypeName","pathNode":{"id":1447,"name":"Bytes32Set","nameLocations":["7792:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"7792:10:9"},"referencedDeclaration":1358,"src":"7792:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1358_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:9"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1475,"src":"7839:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1452,"nodeType":"ArrayTypeName","src":"7839:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:9"},"scope":1766,"src":"7776:300:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1479,"members":[{"constant":false,"id":1478,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:9","nodeType":"VariableDeclaration","scope":1479,"src":"8129:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1477,"nodeType":"UserDefinedTypeName","pathNode":{"id":1476,"name":"Set","nameLocations":["8129:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"8129:3:9"},"referencedDeclaration":1164,"src":"8129:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:9","nodeType":"StructDefinition","scope":1766,"src":"8101:45:9","visibility":"public"},{"body":{"id":1505,"nodeType":"Block","src":"8392:74:9","statements":[{"expression":{"arguments":[{"expression":{"id":1491,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"8414:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"8414:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"8450:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1497,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:9","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:9","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:9","typeDescriptions":{}}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1490,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"8409:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1489,"id":1504,"nodeType":"Return","src":"8402:57:9"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"8152:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:9","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"set","nameLocation":"8348:3:9","nodeType":"VariableDeclaration","scope":1506,"src":"8329:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"AddressSet","nameLocations":["8329:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"8329:10:9"},"referencedDeclaration":1479,"src":"8329:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"value","nameLocation":"8361:5:9","nodeType":"VariableDeclaration","scope":1506,"src":"8353:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:9"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"8386:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1487,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:9"},"scope":1766,"src":"8316:150:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1532,"nodeType":"Block","src":"8713:77:9","statements":[{"expression":{"arguments":[{"expression":{"id":1518,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"8738:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"8738:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"8774:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1524,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:9","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:9","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:9","typeDescriptions":{}}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1517,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"8730:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1516,"id":1531,"nodeType":"Return","src":"8723:60:9"}]},"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"8472:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:9","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"set","nameLocation":"8669:3:9","nodeType":"VariableDeclaration","scope":1533,"src":"8650:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1509,"nodeType":"UserDefinedTypeName","pathNode":{"id":1508,"name":"AddressSet","nameLocations":["8650:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"8650:10:9"},"referencedDeclaration":1479,"src":"8650:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"value","nameLocation":"8682:5:9","nodeType":"VariableDeclaration","scope":1533,"src":"8674:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:9"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1533,"src":"8707:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1514,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:9"},"scope":1766,"src":"8634:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1559,"nodeType":"Block","src":"8957:79:9","statements":[{"expression":{"arguments":[{"expression":{"id":1545,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"8984:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"8984:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9020:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1551,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:9","typeDescriptions":{}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:9","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:9","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1544,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"8974:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1543,"id":1558,"nodeType":"Return","src":"8967:62:9"}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"8796:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":1560,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:9","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"set","nameLocation":"8908:3:9","nodeType":"VariableDeclaration","scope":1560,"src":"8889:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1536,"nodeType":"UserDefinedTypeName","pathNode":{"id":1535,"name":"AddressSet","nameLocations":["8889:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"8889:10:9"},"referencedDeclaration":1479,"src":"8889:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"value","nameLocation":"8921:5:9","nodeType":"VariableDeclaration","scope":1560,"src":"8913:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:9"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1560,"src":"8951:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1541,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:9"},"scope":1766,"src":"8871:165:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"9189:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":1570,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9214:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"9214:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1569,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"9206:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1568,"id":1573,"nodeType":"Return","src":"9199:26:9"}]},"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"9042:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:9","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"set","nameLocation":"9152:3:9","nodeType":"VariableDeclaration","scope":1575,"src":"9133:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1563,"nodeType":"UserDefinedTypeName","pathNode":{"id":1562,"name":"AddressSet","nameLocations":["9133:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"9133:10:9"},"referencedDeclaration":1479,"src":"9133:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:9"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"9180:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:9"},"scope":1766,"src":"9117:115:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"9657:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1593,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"9702:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"9702:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1595,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9714:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1592,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"9698:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:9","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1588,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:9","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:9","typeDescriptions":{}}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1585,"id":1600,"nodeType":"Return","src":"9667:56:9"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"9238:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:9","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"set","nameLocation":"9605:3:9","nodeType":"VariableDeclaration","scope":1602,"src":"9586:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1578,"nodeType":"UserDefinedTypeName","pathNode":{"id":1577,"name":"AddressSet","nameLocations":["9586:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"9586:10:9"},"referencedDeclaration":1479,"src":"9586:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"index","nameLocation":"9618:5:9","nodeType":"VariableDeclaration","scope":1602,"src":"9610:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:9"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1602,"src":"9648:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:9"},"scope":1766,"src":"9574:156:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1631,"nodeType":"Block","src":"10351:219:9","statements":[{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"store","nameLocation":"10378:5:9","nodeType":"VariableDeclaration","scope":1631,"src":"10361:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1615,"nodeType":"ArrayTypeName","src":"10361:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1621,"initialValue":{"arguments":[{"expression":{"id":1618,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"10394:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"10394:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1617,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10386:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:9"},{"assignments":[1626],"declarations":[{"constant":false,"id":1626,"mutability":"mutable","name":"result","nameLocation":"10432:6:9","nodeType":"VariableDeclaration","scope":1631,"src":"10415:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1625,"nodeType":"ArrayTypeName","src":"10415:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1627,"nodeType":"VariableDeclarationStatement","src":"10415:23:9"},{"AST":{"nodeType":"YulBlock","src":"10501:39:9","statements":[{"nodeType":"YulAssignment","src":"10515:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1626,"isOffset":false,"isSlot":false,"src":"10515:6:9","valueSize":1},{"declaration":1616,"isOffset":false,"isSlot":false,"src":"10525:5:9","valueSize":1}],"id":1628,"nodeType":"InlineAssembly","src":"10492:48:9"},{"expression":{"id":1629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"10557:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1611,"id":1630,"nodeType":"Return","src":"10550:13:9"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"9736:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:9","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"set","nameLocation":"10305:3:9","nodeType":"VariableDeclaration","scope":1632,"src":"10286:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1605,"nodeType":"UserDefinedTypeName","pathNode":{"id":1604,"name":"AddressSet","nameLocations":["10286:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"10286:10:9"},"referencedDeclaration":1479,"src":"10286:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1479_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:9"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1632,"src":"10333:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1609,"nodeType":"ArrayTypeName","src":"10333:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:9"},"scope":1766,"src":"10270:300:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":1636,"members":[{"constant":false,"id":1635,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:9","nodeType":"VariableDeclaration","scope":1636,"src":"10617:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1634,"nodeType":"UserDefinedTypeName","pathNode":{"id":1633,"name":"Set","nameLocations":["10617:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"10617:3:9"},"referencedDeclaration":1164,"src":"10617:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:9","nodeType":"StructDefinition","scope":1766,"src":"10592:42:9","visibility":"public"},{"body":{"id":1656,"nodeType":"Block","src":"10877:56:9","statements":[{"expression":{"arguments":[{"expression":{"id":1648,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"10899:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"10899:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"10919:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:9","typeDescriptions":{}}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1647,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"10894:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1646,"id":1655,"nodeType":"Return","src":"10887:39:9"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"10640:159:9","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:9","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"set","nameLocation":"10833:3:9","nodeType":"VariableDeclaration","scope":1657,"src":"10817:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1639,"nodeType":"UserDefinedTypeName","pathNode":{"id":1638,"name":"UintSet","nameLocations":["10817:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"10817:7:9"},"referencedDeclaration":1636,"src":"10817:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"10846:5:9","nodeType":"VariableDeclaration","scope":1657,"src":"10838:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:9"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"10871:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1644,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:9"},"scope":1766,"src":"10804:129:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1677,"nodeType":"Block","src":"11177:59:9","statements":[{"expression":{"arguments":[{"expression":{"id":1669,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"11202:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"11202:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11222:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:9","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1668,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"11194:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1667,"id":1676,"nodeType":"Return","src":"11187:42:9"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"10939:157:9","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:9","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"set","nameLocation":"11133:3:9","nodeType":"VariableDeclaration","scope":1678,"src":"11117:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1660,"nodeType":"UserDefinedTypeName","pathNode":{"id":1659,"name":"UintSet","nameLocations":["11117:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"11117:7:9"},"referencedDeclaration":1636,"src":"11117:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"value","nameLocation":"11146:5:9","nodeType":"VariableDeclaration","scope":1678,"src":"11138:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:9"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"11171:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1665,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:9"},"scope":1766,"src":"11101:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"11400:61:9","statements":[{"expression":{"arguments":[{"expression":{"id":1690,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11427:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"11427:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":1694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"11447:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:9","typeDescriptions":{}}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1689,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"11417:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1688,"id":1697,"nodeType":"Return","src":"11410:44:9"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"11242:70:9","text":" @dev Returns true if the value is in the set. O(1)."},"id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:9","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"set","nameLocation":"11351:3:9","nodeType":"VariableDeclaration","scope":1699,"src":"11335:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1681,"nodeType":"UserDefinedTypeName","pathNode":{"id":1680,"name":"UintSet","nameLocations":["11335:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"11335:7:9"},"referencedDeclaration":1636,"src":"11335:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"value","nameLocation":"11364:5:9","nodeType":"VariableDeclaration","scope":1699,"src":"11356:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:9"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1699,"src":"11394:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1686,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:9"},"scope":1766,"src":"11317:144:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1713,"nodeType":"Block","src":"11611:43:9","statements":[{"expression":{"arguments":[{"expression":{"id":1709,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"11636:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"11636:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1708,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11628:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1707,"id":1712,"nodeType":"Return","src":"11621:26:9"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"11467:70:9","text":" @dev Returns the number of values in the set. O(1)."},"id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:9","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"set","nameLocation":"11574:3:9","nodeType":"VariableDeclaration","scope":1714,"src":"11558:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1702,"nodeType":"UserDefinedTypeName","pathNode":{"id":1701,"name":"UintSet","nameLocations":["11558:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"11558:7:9"},"referencedDeclaration":1636,"src":"11558:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:9"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"11602:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:9"},"scope":1766,"src":"11542:112:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"12076:55:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1728,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"12105:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"12105:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1730,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"12117:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"12101:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:9","typeDescriptions":{}}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1724,"id":1733,"nodeType":"Return","src":"12086:38:9"}]},"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"11660:331:9","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:9","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"set","nameLocation":"12024:3:9","nodeType":"VariableDeclaration","scope":1735,"src":"12008:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1717,"nodeType":"UserDefinedTypeName","pathNode":{"id":1716,"name":"UintSet","nameLocations":["12008:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"12008:7:9"},"referencedDeclaration":1636,"src":"12008:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"index","nameLocation":"12037:5:9","nodeType":"VariableDeclaration","scope":1735,"src":"12029:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:9"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"12067:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:9"},"scope":1766,"src":"11996:135:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"12749:219:9","statements":[{"assignments":[1749],"declarations":[{"constant":false,"id":1749,"mutability":"mutable","name":"store","nameLocation":"12776:5:9","nodeType":"VariableDeclaration","scope":1764,"src":"12759:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1748,"nodeType":"ArrayTypeName","src":"12759:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1754,"initialValue":{"arguments":[{"expression":{"id":1751,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"12792:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":1752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:9","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"12792:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1164_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1750,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"12784:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1164_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:9"},{"assignments":[1759],"declarations":[{"constant":false,"id":1759,"mutability":"mutable","name":"result","nameLocation":"12830:6:9","nodeType":"VariableDeclaration","scope":1764,"src":"12813:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ArrayTypeName","src":"12813:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1760,"nodeType":"VariableDeclarationStatement","src":"12813:23:9"},{"AST":{"nodeType":"YulBlock","src":"12899:39:9","statements":[{"nodeType":"YulAssignment","src":"12913:15:9","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1759,"isOffset":false,"isSlot":false,"src":"12913:6:9","valueSize":1},{"declaration":1749,"isOffset":false,"isSlot":false,"src":"12923:5:9","valueSize":1}],"id":1761,"nodeType":"InlineAssembly","src":"12890:48:9"},{"expression":{"id":1762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"12955:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1744,"id":1763,"nodeType":"Return","src":"12948:13:9"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"12137:529:9","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:9","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"set","nameLocation":"12703:3:9","nodeType":"VariableDeclaration","scope":1765,"src":"12687:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1738,"nodeType":"UserDefinedTypeName","pathNode":{"id":1737,"name":"UintSet","nameLocations":["12687:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"12687:7:9"},"referencedDeclaration":1636,"src":"12687:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1636_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:9"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"12731:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1742,"nodeType":"ArrayTypeName","src":"12731:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:9"},"scope":1766,"src":"12671:297:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1767,"src":"1330:11640:9","usedErrors":[],"usedEvents":[]}],"src":"205:12766:9"},"id":9},"contracts/contractA.sol":{"ast":{"absolutePath":"contracts/contractA.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[563],"AccessControlUpgradeable":[362],"ContractA":[1862],"EnumerableSet":[1766],"IAccessControlEnumerable":[1141],"Initializable":[817],"ReentrancyGuardUpgradeable":[992]},"id":1863,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1768,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":1769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1863,"sourceUnit":993,"src":"58:82:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol","id":1770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1863,"sourceUnit":564,"src":"141:102:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1863,"sourceUnit":818,"src":"244:75:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1772,"name":"Initializable","nameLocations":["343:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":817,"src":"343:13:10"},"id":1773,"nodeType":"InheritanceSpecifier","src":"343:13:10"},{"baseName":{"id":1774,"name":"ReentrancyGuardUpgradeable","nameLocations":["358:26:10"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"358:26:10"},"id":1775,"nodeType":"InheritanceSpecifier","src":"358:26:10"},{"baseName":{"id":1776,"name":"AccessControlEnumerableUpgradeable","nameLocations":["386:34:10"],"nodeType":"IdentifierPath","referencedDeclaration":563,"src":"386:34:10"},"id":1777,"nodeType":"InheritanceSpecifier","src":"386:34:10"}],"canonicalName":"ContractA","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1862,"linearizedBaseContracts":[1862,563,362,1032,1153,1141,1115,863,992,817],"name":"ContractA","nameLocation":"330:9:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"75b238fc","id":1782,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"451:10:10","nodeType":"VariableDeclaration","scope":1862,"src":"427:60:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"427:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"474:12:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":1779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"464:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"464:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"4460bdd6","id":1787,"mutability":"constant","name":"SUPER_ADMIN_ROLE","nameLocation":"517:16:10","nodeType":"VariableDeclaration","scope":1862,"src":"493:72:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"493:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"53555045525f41444d494e5f524f4c45","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"546:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7613a25ecc738585a232ad50a301178f12b3ba8887d13e138b523c4269c47689","typeString":"literal_string \"SUPER_ADMIN_ROLE\""},"value":"SUPER_ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7613a25ecc738585a232ad50a301178f12b3ba8887d13e138b523c4269c47689","typeString":"literal_string \"SUPER_ADMIN_ROLE\""}],"id":1784,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"536:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"536:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":1789,"mutability":"mutable","name":"value","nameLocation":"587:5:10","nodeType":"VariableDeclaration","scope":1862,"src":"571:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"012c78e2b84325878b1bd9d250d772cfe5bda7722d795f45036fa5e1e6e303fc","id":1793,"name":"ValueSet","nameLocation":"605:8:10","nodeType":"EventDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"622:8:10","nodeType":"VariableDeclaration","scope":1793,"src":"614:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"613:18:10"},"src":"599:33:10"},{"body":{"id":1826,"nodeType":"Block","src":"730:316:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1798,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"740:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"740:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"ExpressionStatement","src":"740:24:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1801,"name":"__AccessControlEnumerable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"804:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"804:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"804:32:10"},{"expression":{"arguments":[{"id":1805,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"895:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"915:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"919:6:10","memberName":"sender","nodeType":"MemberAccess","src":"915:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1804,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[522],"referencedDeclaration":522,"src":"884:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1809,"nodeType":"ExpressionStatement","src":"884:42:10"},{"expression":{"arguments":[{"id":1811,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"947:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"959:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"963:6:10","memberName":"sender","nodeType":"MemberAccess","src":"959:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1810,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[522],"referencedDeclaration":522,"src":"936:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"ExpressionStatement","src":"936:34:10"},{"expression":{"arguments":[{"id":1817,"name":"SUPER_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"991:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1009:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1013:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1009:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1816,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[522],"referencedDeclaration":522,"src":"980:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"980:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1821,"nodeType":"ExpressionStatement","src":"980:40:10"},{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1030:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1030:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1825,"nodeType":"ExpressionStatement","src":"1030:9:10"}]},"functionSelector":"8129fc1c","id":1827,"implemented":true,"kind":"function","modifiers":[{"id":1796,"kind":"modifierInvocation","modifierName":{"id":1795,"name":"initializer","nameLocations":["718:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"718:11:10"},"nodeType":"ModifierInvocation","src":"718:11:10"}],"name":"initialize","nameLocation":"698:10:10","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"708:2:10"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[],"src":"730:0:10"},"scope":1862,"src":"689:357:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1852,"nodeType":"Block","src":"1123:135:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1838,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"1149:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1839,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"1161:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1837,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1141:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1141:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420616e2061646d696e","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1171:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226","typeString":"literal_string \"Caller is not an admin\""},"value":"Caller is not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226","typeString":"literal_string \"Caller is not an admin\""}],"id":1836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1133:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1133:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"1133:63:10"},{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1206:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1845,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"1215:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1206:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"1206:15:10"},{"eventCall":{"arguments":[{"id":1849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1245:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"name":"ValueSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1236:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1236:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"EmitStatement","src":"1231:20:10"}]},"functionSelector":"3472df22","id":1853,"implemented":true,"kind":"function","modifiers":[{"id":1834,"kind":"modifierInvocation","modifierName":{"id":1833,"name":"nonReentrant","nameLocations":["1110:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":932,"src":"1110:12:10"},"nodeType":"ModifierInvocation","src":"1110:12:10"}],"name":"setValue","nameLocation":"1061:8:10","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"_value","nameLocation":"1078:6:10","nodeType":"VariableDeclaration","scope":1853,"src":"1070:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"_sender","nameLocation":"1094:7:10","nodeType":"VariableDeclaration","scope":1853,"src":"1086:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1069:33:10"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[],"src":"1123:0:10"},"scope":1862,"src":"1052:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1860,"nodeType":"Block","src":"1314:29:10","statements":[{"expression":{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1331:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1857,"id":1859,"nodeType":"Return","src":"1324:12:10"}]},"functionSelector":"20965255","id":1861,"implemented":true,"kind":"function","modifiers":[],"name":"getValue","nameLocation":"1273:8:10","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"1281:2:10"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1861,"src":"1305:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1304:9:10"},"scope":1862,"src":"1264:79:10","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1863,"src":"321:1024:10","usedErrors":[580,583,894,1042,1045],"usedEvents":[588,1054,1063,1072,1793]}],"src":"32:1314:10"},"id":10}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc603154d2a4d8f88d4d3c11090a8224f572c4b1f8baced3ea46cdec49f4674ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://573f2a2512341950ba78fcee72e3f50b728e5e27269292bfc4dc835b2d2a03aa\",\"dweb:/ipfs/QmWvKXstgHKFZen4RD56PM4PeE7MaqunEpxKxaj5FhJUNc\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220014ed051a852ce22fb52c1a7ecc8e60c68f51230fd8ae5377d4d7ca69221033564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4E 0xD0 MLOAD 0xA8 MSTORE 0xCE 0x22 0xFB MSTORE 0xC1 0xA7 0xEC 0xC8 0xE6 0xC PUSH9 0xF51230FD8AE5377D4D PUSH29 0xA69221033564736F6C6343000814003300000000000000000000000000 ","sourceMap":"1330:11640:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220014ed051a852ce22fb52c1a7ecc8e60c68f51230fd8ae5377d4d7ca69221033564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4E 0xD0 MLOAD 0xA8 MSTORE 0xCE 0x22 0xFB MSTORE 0xC1 0xA7 0xEC 0xC8 0xE6 0xC PUSH9 0xF51230FD8AE5377D4D PUSH29 0xA69221033564736F6C6343000814003300000000000000000000000000 ","sourceMap":"1330:11640:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/contractA.sol":{"ContractA":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"ValueSet","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SUPER_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061159d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806375b238fc1161008c57806391d148541161006657806391d1485414610237578063a217fddf14610267578063ca15c87314610285578063d547741f146102b5576100ea565b806375b238fc146101df5780638129fc1c146101fd5780639010d07c14610207576100ea565b80632f2ff15d116100c85780632f2ff15d1461016d5780633472df221461018957806336568abe146101a55780634460bdd6146101c1576100ea565b806301ffc9a7146100ef578063209652551461011f578063248a9ca31461013d575b600080fd5b610109600480360381019061010491906110c0565b6102d1565b6040516101169190611108565b60405180910390f35b61012761034b565b604051610134919061113c565b60405180910390f35b6101576004803603810190610152919061118d565b610354565b60405161016491906111c9565b60405180910390f35b61018760048036038101906101829190611242565b610382565b005b6101a3600480360381019061019e91906112ae565b6103a4565b005b6101bf60048036038101906101ba9190611242565b610472565b005b6101c96104ed565b6040516101d691906111c9565b60405180910390f35b6101e7610511565b6040516101f491906111c9565b60405180910390f35b610205610535565b005b610221600480360381019061021c91906112ee565b610735565b60405161022e919061133d565b60405180910390f35b610251600480360381019061024c9190611242565b610772565b60405161025e9190611108565b60405180910390f35b61026f6107eb565b60405161027c91906111c9565b60405180910390f35b61029f600480360381019061029a919061118d565b6107f2565b6040516102ac919061113c565b60405180910390f35b6102cf60048036038101906102ca9190611242565b610824565b005b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610344575061034382610846565b5b9050919050565b60008054905090565b60008061035f6108c0565b905080600001600084815260200190815260200160002060010154915050919050565b61038b82610354565b610394816108e8565b61039e83836108fc565b50505050565b6103ac610951565b6103d67fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177582610772565b610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c906113b5565b60405180910390fd5b816000808282546104269190611404565b925050819055507f012c78e2b84325878b1bd9d250d772cfe5bda7722d795f45036fa5e1e6e303fc60005460405161045e919061113c565b60405180910390a161046e6109a8565b5050565b61047a6109c1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104de576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e882826109c9565b505050565b7f7613a25ecc738585a232ad50a301178f12b3ba8887d13e138b523c4269c4768981565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600061053f610a1e565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561058d5750825b9050600060018367ffffffffffffffff161480156105c2575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156105d0575080155b15610607576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106575760018560000160086101000a81548160ff0219169083151502179055505b61065f610a46565b610667610a58565b6106746000801b336108fc565b5061069f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336108fc565b506106ca7f7613a25ecc738585a232ad50a301178f12b3ba8887d13e138b523c4269c47689336108fc565b5060008081905550831561072e5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107259190611491565b60405180910390a15b5050505050565b600080610740610a62565b905061076983826000016000878152602001908152602001600020610a8a90919063ffffffff16565b91505092915050565b60008061077d6108c0565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000801b81565b6000806107fd610a62565b905061081c816000016000858152602001908152602001600020610aa4565b915050919050565b61082d82610354565b610836816108e8565b61084083836109c9565b50505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108b957506108b882610ab9565b5b9050919050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b6108f9816108f46109c1565b610b23565b50565b600080610907610a62565b905060006109158585610b74565b905080156109465761094484836000016000888152602001908152602001600020610c7590919063ffffffff16565b505b809250505092915050565b600061095b610ca5565b9050600281600001540361099b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b60006109b2610ca5565b90506001816000018190555050565b600033905090565b6000806109d4610a62565b905060006109e28585610ccd565b90508015610a1357610a1184836000016000888152602001908152602001600020610dcf90919063ffffffff16565b505b809250505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610a4e610dff565b610a56610e3f565b565b610a60610dff565b565b60007fc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000905090565b6000610a998360000183610e60565b60001c905092915050565b6000610ab282600001610e8b565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b2d8282610772565b610b705780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b679291906114ac565b60405180910390fd5b5050565b600080610b7f6108c0565b9050610b8b8484610772565b610c6957600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c056109c1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610c6f565b60009150505b92915050565b6000610c9d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610e9c565b905092915050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b600080610cd86108c0565b9050610ce48484610772565b15610dc357600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d5f6109c1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050610dc9565b60009150505b92915050565b6000610df7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f0c565b905092915050565b610e07611020565b610e3d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e47610dff565b6000610e51610ca5565b90506001816000018190555050565b6000826000018281548110610e7857610e776114d5565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b6000610ea88383611040565b610f01578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610f06565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611014576000600182610f3e9190611504565b9050600060018660000180549050610f569190611504565b9050808214610fc5576000866000018281548110610f7757610f766114d5565b5b9060005260206000200154905080876000018481548110610f9b57610f9a6114d5565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610fd957610fd8611538565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061101a565b60009150505b92915050565b600061102a610a1e565b60000160089054906101000a900460ff16905090565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61109d81611068565b81146110a857600080fd5b50565b6000813590506110ba81611094565b92915050565b6000602082840312156110d6576110d5611063565b5b60006110e4848285016110ab565b91505092915050565b60008115159050919050565b611102816110ed565b82525050565b600060208201905061111d60008301846110f9565b92915050565b6000819050919050565b61113681611123565b82525050565b6000602082019050611151600083018461112d565b92915050565b6000819050919050565b61116a81611157565b811461117557600080fd5b50565b60008135905061118781611161565b92915050565b6000602082840312156111a3576111a2611063565b5b60006111b184828501611178565b91505092915050565b6111c381611157565b82525050565b60006020820190506111de60008301846111ba565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061120f826111e4565b9050919050565b61121f81611204565b811461122a57600080fd5b50565b60008135905061123c81611216565b92915050565b6000806040838503121561125957611258611063565b5b600061126785828601611178565b92505060206112788582860161122d565b9150509250929050565b61128b81611123565b811461129657600080fd5b50565b6000813590506112a881611282565b92915050565b600080604083850312156112c5576112c4611063565b5b60006112d385828601611299565b92505060206112e48582860161122d565b9150509250929050565b6000806040838503121561130557611304611063565b5b600061131385828601611178565b925050602061132485828601611299565b9150509250929050565b61133781611204565b82525050565b6000602082019050611352600083018461132e565b92915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000600082015250565b600061139f601683611358565b91506113aa82611369565b602082019050919050565b600060208201905081810360008301526113ce81611392565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061140f82611123565b915061141a83611123565b9250828201905080821115611432576114316113d5565b5b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061147b61147661147184611438565b611456565b611442565b9050919050565b61148b81611460565b82525050565b60006020820190506114a66000830184611482565b92915050565b60006040820190506114c1600083018561132e565b6114ce60208301846111ba565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061150f82611123565b915061151a83611123565b9250828203905081811115611532576115316113d5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212202f3da50404d9d0106c8303baecee45c4e367db924c263f4b9077c805e0412ab464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x207 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3472DF22 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x4460BDD6 EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x20965255 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x344 JUMPI POP PUSH2 0x343 DUP3 PUSH2 0x846 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35F PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38B DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x39E DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x951 JUMP JUMPDEST PUSH2 0x3D6 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1404 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x12C78E2B84325878B1BD9D250D772CFE5BDA7722D795F45036FA5E1E6E303FC PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x46E PUSH2 0x9A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x47A PUSH2 0x9C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E8 DUP3 DUP3 PUSH2 0x9C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7613A25ECC738585A232AD50A301178F12B3BA8887D13E138B523C4269C47689 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x58D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5C2 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x657 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65F PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x667 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x674 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x8FC JUMP JUMPDEST POP PUSH2 0x69F PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x8FC JUMP JUMPDEST POP PUSH2 0x6CA PUSH32 0x7613A25ECC738585A232AD50A301178F12B3BA8887D13E138B523C4269C47689 CALLER PUSH2 0x8FC JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x740 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH2 0x769 DUP4 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77D PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7FD PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH2 0x81C DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x836 DUP2 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x840 DUP4 DUP4 PUSH2 0x9C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8B9 JUMPI POP PUSH2 0x8B8 DUP3 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8F9 DUP2 PUSH2 0x8F4 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x907 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x915 DUP6 DUP6 PUSH2 0xB74 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x946 JUMPI PUSH2 0x944 DUP5 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xC75 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95B PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B2 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D4 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9E2 DUP6 DUP6 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA13 JUMPI PUSH2 0xA11 DUP5 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xDCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA4E PUSH2 0xDFF JUMP JUMPDEST PUSH2 0xA56 PUSH2 0xE3F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA60 PUSH2 0xDFF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC1F6FE24621CE81EC5827CAF0253CADB74709B061630E6B55E82371705932000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB2 DUP3 PUSH1 0x0 ADD PUSH2 0xE8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2D DUP3 DUP3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0xB70 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP3 SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB7F PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB8B DUP5 DUP5 PUSH2 0x772 JUMP JUMPDEST PUSH2 0xC69 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC05 PUSH2 0x9C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCD8 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE4 DUP5 DUP5 PUSH2 0x772 JUMP JUMPDEST ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD5F PUSH2 0x9C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xF0C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE07 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE47 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE51 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE78 JUMPI PUSH2 0xE77 PUSH2 0x14D5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA8 DUP4 DUP4 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0xF01 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1014 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0x14D5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF9B JUMPI PUSH2 0xF9A PUSH2 0x14D5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0x1538 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102A PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109D DUP2 PUSH2 0x1068 JUMP JUMPDEST DUP2 EQ PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BA DUP2 PUSH2 0x1094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E4 DUP5 DUP3 DUP6 ADD PUSH2 0x10AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1102 DUP2 PUSH2 0x10ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x112D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116A DUP2 PUSH2 0x1157 JUMP JUMPDEST DUP2 EQ PUSH2 0x1175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1187 DUP2 PUSH2 0x1161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP2 PUSH2 0x1157 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120F DUP3 PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121F DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP2 EQ PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123C DUP2 PUSH2 0x1216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1258 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1267 DUP6 DUP3 DUP7 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1278 DUP6 DUP3 DUP7 ADD PUSH2 0x122D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x128B DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP2 EQ PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A8 DUP2 PUSH2 0x1282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C5 JUMPI PUSH2 0x12C4 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E4 DUP6 DUP3 DUP7 ADD PUSH2 0x122D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP6 DUP3 DUP7 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1324 DUP6 DUP3 DUP7 ADD PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1337 DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1352 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139F PUSH1 0x16 DUP4 PUSH2 0x1358 JUMP JUMPDEST SWAP2 POP PUSH2 0x13AA DUP3 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13CE DUP2 PUSH2 0x1392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140F DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x141A DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1432 JUMPI PUSH2 0x1431 PUSH2 0x13D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147B PUSH2 0x1476 PUSH2 0x1471 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148B DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1482 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x14CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x150F DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x151A DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1532 JUMPI PUSH2 0x1531 PUSH2 0x13D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F RETURNDATASIZE 0xA5 DIV DIV 0xD9 0xD0 LT PUSH13 0x8303BAECEE45C4E367DB924C26 EXTCODEHASH 0x4B SWAP1 PUSH24 0xC805E0412AB464736F6C6343000814003300000000000000 ","sourceMap":"321:1024:10:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_1782":{"entryPoint":1297,"id":1782,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":2027,"id":28,"parameterSlots":0,"returnSlots":0},"@SUPER_ADMIN_ROLE_1787":{"entryPoint":1261,"id":1787,"parameterSlots":0,"returnSlots":0},"@__AccessControlEnumerable_init_407":{"entryPoint":2648,"id":407,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_903":{"entryPoint":2630,"id":903,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_921":{"entryPoint":3647,"id":921,"parameterSlots":0,"returnSlots":0},"@_add_1206":{"entryPoint":3740,"id":1206,"parameterSlots":2,"returnSlots":1},"@_at_1340":{"entryPoint":3680,"id":1340,"parameterSlots":2,"returnSlots":1},"@_checkInitializing_739":{"entryPoint":3583,"id":739,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":2280,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":2851,"id":150,"parameterSlots":2,"returnSlots":0},"@_contains_1309":{"entryPoint":4160,"id":1309,"parameterSlots":2,"returnSlots":1},"@_getAccessControlEnumerableStorage_401":{"entryPoint":2658,"id":401,"parameterSlots":0,"returnSlots":1},"@_getAccessControlStorage_46":{"entryPoint":2240,"id":46,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_816":{"entryPoint":2590,"id":816,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_891":{"entryPoint":3237,"id":891,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":2932,"id":315,"parameterSlots":2,"returnSlots":1},"@_grantRole_522":{"entryPoint":2300,"id":522,"parameterSlots":2,"returnSlots":1},"@_isInitializing_807":{"entryPoint":4128,"id":807,"parameterSlots":0,"returnSlots":1},"@_length_1323":{"entryPoint":3723,"id":1323,"parameterSlots":1,"returnSlots":1},"@_msgSender_845":{"entryPoint":2497,"id":845,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_973":{"entryPoint":2472,"id":973,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_957":{"entryPoint":2385,"id":957,"parameterSlots":0,"returnSlots":0},"@_remove_1290":{"entryPoint":3852,"id":1290,"parameterSlots":2,"returnSlots":1},"@_revokeRole_361":{"entryPoint":3277,"id":361,"parameterSlots":2,"returnSlots":1},"@_revokeRole_562":{"entryPoint":2505,"id":562,"parameterSlots":2,"returnSlots":1},"@add_1506":{"entryPoint":3189,"id":1506,"parameterSlots":2,"returnSlots":1},"@at_1602":{"entryPoint":2698,"id":1602,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_171":{"entryPoint":852,"id":171,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_482":{"entryPoint":2034,"id":482,"parameterSlots":1,"returnSlots":1},"@getRoleMember_460":{"entryPoint":1845,"id":460,"parameterSlots":2,"returnSlots":1},"@getValue_1861":{"entryPoint":843,"id":1861,"parameterSlots":0,"returnSlots":1},"@grantRole_190":{"entryPoint":898,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":1906,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_1827":{"entryPoint":1333,"id":1827,"parameterSlots":0,"returnSlots":0},"@length_1575":{"entryPoint":2724,"id":1575,"parameterSlots":1,"returnSlots":1},"@remove_1533":{"entryPoint":3535,"id":1533,"parameterSlots":2,"returnSlots":1},"@renounceRole_232":{"entryPoint":1138,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":2084,"id":209,"parameterSlots":2,"returnSlots":0},"@setValue_1853":{"entryPoint":932,"id":1853,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1031":{"entryPoint":2745,"id":1031,"parameterSlots":1,"returnSlots":1},"@supportsInterface_435":{"entryPoint":721,"id":435,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":2118,"id":91,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":4267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":4493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":4674,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":4846,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":4782,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4910,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4345,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4538,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":5250,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack":{"entryPoint":5010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":5292,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":5265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5045,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4412,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4952,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5124,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5380,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4612,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4333,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4439,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4200,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":5176,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4580,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4387,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":5186,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":5216,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":5206,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5077,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":5432,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5333,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4195,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226":{"entryPoint":4969,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4630,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4244,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4738,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8827:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"378:105:11","statements":[{"nodeType":"YulAssignment","src":"388:89:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:11"},"nodeType":"YulFunctionCall","src":"399:78:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:11"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:11","type":""}],"src":"334:149:11"},{"body":{"nodeType":"YulBlock","src":"531:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:11"},"nodeType":"YulFunctionCall","src":"589:12:11"},"nodeType":"YulExpressionStatement","src":"589:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:11"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:11"},"nodeType":"YulFunctionCall","src":"561:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:11"},"nodeType":"YulFunctionCall","src":"551:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:11"},"nodeType":"YulFunctionCall","src":"544:42:11"},"nodeType":"YulIf","src":"541:62:11"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:11","type":""}],"src":"489:120:11"},{"body":{"nodeType":"YulBlock","src":"666:86:11","statements":[{"nodeType":"YulAssignment","src":"676:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:11"},"nodeType":"YulFunctionCall","src":"685:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:11"},"nodeType":"YulFunctionCall","src":"714:32:11"},"nodeType":"YulExpressionStatement","src":"714:32:11"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:11","type":""}],"src":"615:137:11"},{"body":{"nodeType":"YulBlock","src":"823:262:11","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:11"},"nodeType":"YulFunctionCall","src":"871:79:11"},"nodeType":"YulExpressionStatement","src":"871:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:11"},"nodeType":"YulFunctionCall","src":"840:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:11"},"nodeType":"YulFunctionCall","src":"836:32:11"},"nodeType":"YulIf","src":"833:119:11"},{"nodeType":"YulBlock","src":"962:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:11"},"nodeType":"YulFunctionCall","src":"1036:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:11"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:11"},"nodeType":"YulFunctionCall","src":"1016:52:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:11","type":""}],"src":"758:327:11"},{"body":{"nodeType":"YulBlock","src":"1133:48:11","statements":[{"nodeType":"YulAssignment","src":"1143:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:11"},"nodeType":"YulFunctionCall","src":"1161:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:11"},"nodeType":"YulFunctionCall","src":"1154:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:11","type":""}],"src":"1091:90:11"},{"body":{"nodeType":"YulBlock","src":"1246:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:11"},"nodeType":"YulFunctionCall","src":"1268:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:11"},"nodeType":"YulFunctionCall","src":"1256:34:11"},"nodeType":"YulExpressionStatement","src":"1256:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:11","type":""}],"src":"1187:109:11"},{"body":{"nodeType":"YulBlock","src":"1394:118:11","statements":[{"nodeType":"YulAssignment","src":"1404:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:11"},"nodeType":"YulFunctionCall","src":"1412:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:11"},"nodeType":"YulFunctionCall","src":"1487:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:11"},"nodeType":"YulFunctionCall","src":"1440:65:11"},"nodeType":"YulExpressionStatement","src":"1440:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:11","type":""}],"src":"1302:210:11"},{"body":{"nodeType":"YulBlock","src":"1563:32:11","statements":[{"nodeType":"YulAssignment","src":"1573:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:11","type":""}],"src":"1518:77:11"},{"body":{"nodeType":"YulBlock","src":"1666:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1683:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1706:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1688:17:11"},"nodeType":"YulFunctionCall","src":"1688:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1676:6:11"},"nodeType":"YulFunctionCall","src":"1676:37:11"},"nodeType":"YulExpressionStatement","src":"1676:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1654:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1661:3:11","type":""}],"src":"1601:118:11"},{"body":{"nodeType":"YulBlock","src":"1823:124:11","statements":[{"nodeType":"YulAssignment","src":"1833:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1845:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1856:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1841:3:11"},"nodeType":"YulFunctionCall","src":"1841:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1833:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1913:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1937:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1922:3:11"},"nodeType":"YulFunctionCall","src":"1922:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1869:43:11"},"nodeType":"YulFunctionCall","src":"1869:71:11"},"nodeType":"YulExpressionStatement","src":"1869:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1795:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1807:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1818:4:11","type":""}],"src":"1725:222:11"},{"body":{"nodeType":"YulBlock","src":"1998:32:11","statements":[{"nodeType":"YulAssignment","src":"2008:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2019:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2008:7:11"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1980:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1990:7:11","type":""}],"src":"1953:77:11"},{"body":{"nodeType":"YulBlock","src":"2079:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2136:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2145:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2148:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2138:6:11"},"nodeType":"YulFunctionCall","src":"2138:12:11"},"nodeType":"YulExpressionStatement","src":"2138:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2102:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2127:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2109:17:11"},"nodeType":"YulFunctionCall","src":"2109:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2099:2:11"},"nodeType":"YulFunctionCall","src":"2099:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2092:6:11"},"nodeType":"YulFunctionCall","src":"2092:43:11"},"nodeType":"YulIf","src":"2089:63:11"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2072:5:11","type":""}],"src":"2036:122:11"},{"body":{"nodeType":"YulBlock","src":"2216:87:11","statements":[{"nodeType":"YulAssignment","src":"2226:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2248:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2235:12:11"},"nodeType":"YulFunctionCall","src":"2235:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2226:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2291:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2264:26:11"},"nodeType":"YulFunctionCall","src":"2264:33:11"},"nodeType":"YulExpressionStatement","src":"2264:33:11"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2194:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2202:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"src":"2164:139:11"},{"body":{"nodeType":"YulBlock","src":"2375:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"2421:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2423:77:11"},"nodeType":"YulFunctionCall","src":"2423:79:11"},"nodeType":"YulExpressionStatement","src":"2423:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2396:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2405:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2392:3:11"},"nodeType":"YulFunctionCall","src":"2392:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2417:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2388:3:11"},"nodeType":"YulFunctionCall","src":"2388:32:11"},"nodeType":"YulIf","src":"2385:119:11"},{"nodeType":"YulBlock","src":"2514:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2529:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2543:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2533:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2558:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2593:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2604:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:11"},"nodeType":"YulFunctionCall","src":"2589:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2613:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2568:20:11"},"nodeType":"YulFunctionCall","src":"2568:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2558:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2345:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2356:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2368:6:11","type":""}],"src":"2309:329:11"},{"body":{"nodeType":"YulBlock","src":"2709:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2726:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2749:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2731:17:11"},"nodeType":"YulFunctionCall","src":"2731:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2719:6:11"},"nodeType":"YulFunctionCall","src":"2719:37:11"},"nodeType":"YulExpressionStatement","src":"2719:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2697:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2704:3:11","type":""}],"src":"2644:118:11"},{"body":{"nodeType":"YulBlock","src":"2866:124:11","statements":[{"nodeType":"YulAssignment","src":"2876:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2899:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:11"},"nodeType":"YulFunctionCall","src":"2884:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2876:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2956:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:11"},"nodeType":"YulFunctionCall","src":"2965:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2912:43:11"},"nodeType":"YulFunctionCall","src":"2912:71:11"},"nodeType":"YulExpressionStatement","src":"2912:71:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2838:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2850:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2861:4:11","type":""}],"src":"2768:222:11"},{"body":{"nodeType":"YulBlock","src":"3041:81:11","statements":[{"nodeType":"YulAssignment","src":"3051:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3066:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3073:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3062:3:11"},"nodeType":"YulFunctionCall","src":"3062:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3051:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3023:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3033:7:11","type":""}],"src":"2996:126:11"},{"body":{"nodeType":"YulBlock","src":"3173:51:11","statements":[{"nodeType":"YulAssignment","src":"3183:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3212:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3194:17:11"},"nodeType":"YulFunctionCall","src":"3194:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3183:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3155:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3165:7:11","type":""}],"src":"3128:96:11"},{"body":{"nodeType":"YulBlock","src":"3273:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"3330:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3339:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3342:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3332:6:11"},"nodeType":"YulFunctionCall","src":"3332:12:11"},"nodeType":"YulExpressionStatement","src":"3332:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3296:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3321:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3303:17:11"},"nodeType":"YulFunctionCall","src":"3303:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3293:2:11"},"nodeType":"YulFunctionCall","src":"3293:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3286:6:11"},"nodeType":"YulFunctionCall","src":"3286:43:11"},"nodeType":"YulIf","src":"3283:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3266:5:11","type":""}],"src":"3230:122:11"},{"body":{"nodeType":"YulBlock","src":"3410:87:11","statements":[{"nodeType":"YulAssignment","src":"3420:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3442:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3429:12:11"},"nodeType":"YulFunctionCall","src":"3429:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3420:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3485:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3458:26:11"},"nodeType":"YulFunctionCall","src":"3458:33:11"},"nodeType":"YulExpressionStatement","src":"3458:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3388:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3396:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3404:5:11","type":""}],"src":"3358:139:11"},{"body":{"nodeType":"YulBlock","src":"3586:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"3632:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3634:77:11"},"nodeType":"YulFunctionCall","src":"3634:79:11"},"nodeType":"YulExpressionStatement","src":"3634:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3607:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3616:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3603:3:11"},"nodeType":"YulFunctionCall","src":"3603:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3628:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3599:3:11"},"nodeType":"YulFunctionCall","src":"3599:32:11"},"nodeType":"YulIf","src":"3596:119:11"},{"nodeType":"YulBlock","src":"3725:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3740:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3754:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3744:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3769:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3804:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3815:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3800:3:11"},"nodeType":"YulFunctionCall","src":"3800:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3824:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3779:20:11"},"nodeType":"YulFunctionCall","src":"3779:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3769:6:11"}]}]},{"nodeType":"YulBlock","src":"3852:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3867:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3881:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3871:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3897:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3932:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3943:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3928:3:11"},"nodeType":"YulFunctionCall","src":"3928:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3952:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3907:20:11"},"nodeType":"YulFunctionCall","src":"3907:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3897:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3548:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3559:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3571:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3579:6:11","type":""}],"src":"3503:474:11"},{"body":{"nodeType":"YulBlock","src":"4026:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"4083:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4095:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4085:6:11"},"nodeType":"YulFunctionCall","src":"4085:12:11"},"nodeType":"YulExpressionStatement","src":"4085:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4049:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4074:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4056:17:11"},"nodeType":"YulFunctionCall","src":"4056:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4046:2:11"},"nodeType":"YulFunctionCall","src":"4046:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4039:6:11"},"nodeType":"YulFunctionCall","src":"4039:43:11"},"nodeType":"YulIf","src":"4036:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:11","type":""}],"src":"3983:122:11"},{"body":{"nodeType":"YulBlock","src":"4163:87:11","statements":[{"nodeType":"YulAssignment","src":"4173:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4195:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4182:12:11"},"nodeType":"YulFunctionCall","src":"4182:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4173:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4238:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4211:26:11"},"nodeType":"YulFunctionCall","src":"4211:33:11"},"nodeType":"YulExpressionStatement","src":"4211:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4141:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"4149:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4157:5:11","type":""}],"src":"4111:139:11"},{"body":{"nodeType":"YulBlock","src":"4339:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"4385:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4387:77:11"},"nodeType":"YulFunctionCall","src":"4387:79:11"},"nodeType":"YulExpressionStatement","src":"4387:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4360:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4369:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4356:3:11"},"nodeType":"YulFunctionCall","src":"4356:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4381:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4352:3:11"},"nodeType":"YulFunctionCall","src":"4352:32:11"},"nodeType":"YulIf","src":"4349:119:11"},{"nodeType":"YulBlock","src":"4478:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4493:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4507:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4497:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4522:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4568:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4553:3:11"},"nodeType":"YulFunctionCall","src":"4553:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4577:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4532:20:11"},"nodeType":"YulFunctionCall","src":"4532:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4522:6:11"}]}]},{"nodeType":"YulBlock","src":"4605:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4620:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4634:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4624:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4650:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4696:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4681:3:11"},"nodeType":"YulFunctionCall","src":"4681:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4705:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4660:20:11"},"nodeType":"YulFunctionCall","src":"4660:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4650:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4301:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4312:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4324:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4332:6:11","type":""}],"src":"4256:474:11"},{"body":{"nodeType":"YulBlock","src":"4819:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"4865:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4867:77:11"},"nodeType":"YulFunctionCall","src":"4867:79:11"},"nodeType":"YulExpressionStatement","src":"4867:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4840:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4849:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4836:3:11"},"nodeType":"YulFunctionCall","src":"4836:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4861:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4832:3:11"},"nodeType":"YulFunctionCall","src":"4832:32:11"},"nodeType":"YulIf","src":"4829:119:11"},{"nodeType":"YulBlock","src":"4958:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4973:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4987:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4977:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5002:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5037:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5048:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5033:3:11"},"nodeType":"YulFunctionCall","src":"5033:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5057:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5012:20:11"},"nodeType":"YulFunctionCall","src":"5012:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5002:6:11"}]}]},{"nodeType":"YulBlock","src":"5085:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5100:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5114:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5104:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5130:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5165:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5176:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5161:3:11"},"nodeType":"YulFunctionCall","src":"5161:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5185:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5140:20:11"},"nodeType":"YulFunctionCall","src":"5140:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5130:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4781:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4792:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4804:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4812:6:11","type":""}],"src":"4736:474:11"},{"body":{"nodeType":"YulBlock","src":"5281:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5298:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5321:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5303:17:11"},"nodeType":"YulFunctionCall","src":"5303:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5291:6:11"},"nodeType":"YulFunctionCall","src":"5291:37:11"},"nodeType":"YulExpressionStatement","src":"5291:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5269:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5276:3:11","type":""}],"src":"5216:118:11"},{"body":{"nodeType":"YulBlock","src":"5438:124:11","statements":[{"nodeType":"YulAssignment","src":"5448:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5460:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5471:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5456:3:11"},"nodeType":"YulFunctionCall","src":"5456:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5448:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5528:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5552:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5537:3:11"},"nodeType":"YulFunctionCall","src":"5537:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5484:43:11"},"nodeType":"YulFunctionCall","src":"5484:71:11"},"nodeType":"YulExpressionStatement","src":"5484:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5410:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5422:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5433:4:11","type":""}],"src":"5340:222:11"},{"body":{"nodeType":"YulBlock","src":"5664:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5681:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5686:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:11"},"nodeType":"YulFunctionCall","src":"5674:19:11"},"nodeType":"YulExpressionStatement","src":"5674:19:11"},{"nodeType":"YulAssignment","src":"5702:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5721:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5726:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5717:3:11"},"nodeType":"YulFunctionCall","src":"5717:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5702:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5636:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"5641:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5652:11:11","type":""}],"src":"5568:169:11"},{"body":{"nodeType":"YulBlock","src":"5849:66:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5871:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5879:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5867:3:11"},"nodeType":"YulFunctionCall","src":"5867:14:11"},{"hexValue":"43616c6c6572206973206e6f7420616e2061646d696e","kind":"string","nodeType":"YulLiteral","src":"5883:24:11","type":"","value":"Caller is not an admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5860:6:11"},"nodeType":"YulFunctionCall","src":"5860:48:11"},"nodeType":"YulExpressionStatement","src":"5860:48:11"}]},"name":"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5841:6:11","type":""}],"src":"5743:172:11"},{"body":{"nodeType":"YulBlock","src":"6067:220:11","statements":[{"nodeType":"YulAssignment","src":"6077:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6143:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6148:2:11","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6084:58:11"},"nodeType":"YulFunctionCall","src":"6084:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6077:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6249:3:11"}],"functionName":{"name":"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226","nodeType":"YulIdentifier","src":"6160:88:11"},"nodeType":"YulFunctionCall","src":"6160:93:11"},"nodeType":"YulExpressionStatement","src":"6160:93:11"},{"nodeType":"YulAssignment","src":"6262:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6273:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6278:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:11"},"nodeType":"YulFunctionCall","src":"6269:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6262:3:11"}]}]},"name":"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6055:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6063:3:11","type":""}],"src":"5921:366:11"},{"body":{"nodeType":"YulBlock","src":"6464:248:11","statements":[{"nodeType":"YulAssignment","src":"6474:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6486:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6497:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6482:3:11"},"nodeType":"YulFunctionCall","src":"6482:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6474:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6521:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6532:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6517:3:11"},"nodeType":"YulFunctionCall","src":"6517:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6540:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6546:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6536:3:11"},"nodeType":"YulFunctionCall","src":"6536:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6510:6:11"},"nodeType":"YulFunctionCall","src":"6510:47:11"},"nodeType":"YulExpressionStatement","src":"6510:47:11"},{"nodeType":"YulAssignment","src":"6566:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6700:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6574:124:11"},"nodeType":"YulFunctionCall","src":"6574:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6566:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6444:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6459:4:11","type":""}],"src":"6293:419:11"},{"body":{"nodeType":"YulBlock","src":"6746:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6763:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6766:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6756:6:11"},"nodeType":"YulFunctionCall","src":"6756:88:11"},"nodeType":"YulExpressionStatement","src":"6756:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6860:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6863:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6853:6:11"},"nodeType":"YulFunctionCall","src":"6853:15:11"},"nodeType":"YulExpressionStatement","src":"6853:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6884:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6887:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6877:6:11"},"nodeType":"YulFunctionCall","src":"6877:15:11"},"nodeType":"YulExpressionStatement","src":"6877:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6718:180:11"},{"body":{"nodeType":"YulBlock","src":"6948:147:11","statements":[{"nodeType":"YulAssignment","src":"6958:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6981:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6963:17:11"},"nodeType":"YulFunctionCall","src":"6963:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6958:1:11"}]},{"nodeType":"YulAssignment","src":"6992:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7015:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6997:17:11"},"nodeType":"YulFunctionCall","src":"6997:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6992:1:11"}]},{"nodeType":"YulAssignment","src":"7026:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7037:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"7040:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:11"},"nodeType":"YulFunctionCall","src":"7033:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7026:3:11"}]},{"body":{"nodeType":"YulBlock","src":"7066:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7068:16:11"},"nodeType":"YulFunctionCall","src":"7068:18:11"},"nodeType":"YulExpressionStatement","src":"7068:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7058:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"7061:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7055:2:11"},"nodeType":"YulFunctionCall","src":"7055:10:11"},"nodeType":"YulIf","src":"7052:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6935:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6938:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6944:3:11","type":""}],"src":"6904:191:11"},{"body":{"nodeType":"YulBlock","src":"7154:32:11","statements":[{"nodeType":"YulAssignment","src":"7164:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"7175:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7164:7:11"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7136:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7146:7:11","type":""}],"src":"7101:85:11"},{"body":{"nodeType":"YulBlock","src":"7236:57:11","statements":[{"nodeType":"YulAssignment","src":"7246:41:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7261:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7268:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7257:3:11"},"nodeType":"YulFunctionCall","src":"7257:30:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7246:7:11"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7218:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7228:7:11","type":""}],"src":"7192:101:11"},{"body":{"nodeType":"YulBlock","src":"7331:28:11","statements":[{"nodeType":"YulAssignment","src":"7341:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"7348:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7341:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7317:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7327:3:11","type":""}],"src":"7299:60:11"},{"body":{"nodeType":"YulBlock","src":"7432:89:11","statements":[{"nodeType":"YulAssignment","src":"7442:73:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7507:5:11"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"7481:25:11"},"nodeType":"YulFunctionCall","src":"7481:32:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7472:8:11"},"nodeType":"YulFunctionCall","src":"7472:42:11"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"7455:16:11"},"nodeType":"YulFunctionCall","src":"7455:60:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7442:9:11"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7412:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7422:9:11","type":""}],"src":"7365:156:11"},{"body":{"nodeType":"YulBlock","src":"7599:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7616:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7659:5:11"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"7621:37:11"},"nodeType":"YulFunctionCall","src":"7621:44:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7609:6:11"},"nodeType":"YulFunctionCall","src":"7609:57:11"},"nodeType":"YulExpressionStatement","src":"7609:57:11"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7587:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7594:3:11","type":""}],"src":"7527:145:11"},{"body":{"nodeType":"YulBlock","src":"7783:131:11","statements":[{"nodeType":"YulAssignment","src":"7793:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7805:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7816:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7801:3:11"},"nodeType":"YulFunctionCall","src":"7801:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7793:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7880:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7893:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7904:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7889:3:11"},"nodeType":"YulFunctionCall","src":"7889:17:11"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"7829:50:11"},"nodeType":"YulFunctionCall","src":"7829:78:11"},"nodeType":"YulExpressionStatement","src":"7829:78:11"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7755:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7767:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7778:4:11","type":""}],"src":"7678:236:11"},{"body":{"nodeType":"YulBlock","src":"8046:206:11","statements":[{"nodeType":"YulAssignment","src":"8056:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8068:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8079:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8064:3:11"},"nodeType":"YulFunctionCall","src":"8064:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8136:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8149:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8160:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8145:3:11"},"nodeType":"YulFunctionCall","src":"8145:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8092:43:11"},"nodeType":"YulFunctionCall","src":"8092:71:11"},"nodeType":"YulExpressionStatement","src":"8092:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8217:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8230:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8241:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8226:3:11"},"nodeType":"YulFunctionCall","src":"8226:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8173:43:11"},"nodeType":"YulFunctionCall","src":"8173:72:11"},"nodeType":"YulExpressionStatement","src":"8173:72:11"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8010:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8022:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8030:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8041:4:11","type":""}],"src":"7920:332:11"},{"body":{"nodeType":"YulBlock","src":"8286:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8303:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8306:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8296:6:11"},"nodeType":"YulFunctionCall","src":"8296:88:11"},"nodeType":"YulExpressionStatement","src":"8296:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8400:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8403:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8393:6:11"},"nodeType":"YulFunctionCall","src":"8393:15:11"},"nodeType":"YulExpressionStatement","src":"8393:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8424:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8427:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8417:6:11"},"nodeType":"YulFunctionCall","src":"8417:15:11"},"nodeType":"YulExpressionStatement","src":"8417:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8258:180:11"},{"body":{"nodeType":"YulBlock","src":"8489:149:11","statements":[{"nodeType":"YulAssignment","src":"8499:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8522:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8504:17:11"},"nodeType":"YulFunctionCall","src":"8504:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8499:1:11"}]},{"nodeType":"YulAssignment","src":"8533:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8556:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8538:17:11"},"nodeType":"YulFunctionCall","src":"8538:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8533:1:11"}]},{"nodeType":"YulAssignment","src":"8567:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8579:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"8582:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8575:3:11"},"nodeType":"YulFunctionCall","src":"8575:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8567:4:11"}]},{"body":{"nodeType":"YulBlock","src":"8609:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8611:16:11"},"nodeType":"YulFunctionCall","src":"8611:18:11"},"nodeType":"YulExpressionStatement","src":"8611:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8600:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"8606:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8597:2:11"},"nodeType":"YulFunctionCall","src":"8597:11:11"},"nodeType":"YulIf","src":"8594:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8475:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"8478:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8484:4:11","type":""}],"src":"8444:194:11"},{"body":{"nodeType":"YulBlock","src":"8672:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8689:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8692:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8682:6:11"},"nodeType":"YulFunctionCall","src":"8682:88:11"},"nodeType":"YulExpressionStatement","src":"8682:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8786:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8789:4:11","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8779:6:11"},"nodeType":"YulFunctionCall","src":"8779:15:11"},"nodeType":"YulExpressionStatement","src":"8779:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8810:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8813:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8803:6:11"},"nodeType":"YulFunctionCall","src":"8803:15:11"},"nodeType":"YulExpressionStatement","src":"8803:15:11"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"8644:180:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806375b238fc1161008c57806391d148541161006657806391d1485414610237578063a217fddf14610267578063ca15c87314610285578063d547741f146102b5576100ea565b806375b238fc146101df5780638129fc1c146101fd5780639010d07c14610207576100ea565b80632f2ff15d116100c85780632f2ff15d1461016d5780633472df221461018957806336568abe146101a55780634460bdd6146101c1576100ea565b806301ffc9a7146100ef578063209652551461011f578063248a9ca31461013d575b600080fd5b610109600480360381019061010491906110c0565b6102d1565b6040516101169190611108565b60405180910390f35b61012761034b565b604051610134919061113c565b60405180910390f35b6101576004803603810190610152919061118d565b610354565b60405161016491906111c9565b60405180910390f35b61018760048036038101906101829190611242565b610382565b005b6101a3600480360381019061019e91906112ae565b6103a4565b005b6101bf60048036038101906101ba9190611242565b610472565b005b6101c96104ed565b6040516101d691906111c9565b60405180910390f35b6101e7610511565b6040516101f491906111c9565b60405180910390f35b610205610535565b005b610221600480360381019061021c91906112ee565b610735565b60405161022e919061133d565b60405180910390f35b610251600480360381019061024c9190611242565b610772565b60405161025e9190611108565b60405180910390f35b61026f6107eb565b60405161027c91906111c9565b60405180910390f35b61029f600480360381019061029a919061118d565b6107f2565b6040516102ac919061113c565b60405180910390f35b6102cf60048036038101906102ca9190611242565b610824565b005b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610344575061034382610846565b5b9050919050565b60008054905090565b60008061035f6108c0565b905080600001600084815260200190815260200160002060010154915050919050565b61038b82610354565b610394816108e8565b61039e83836108fc565b50505050565b6103ac610951565b6103d67fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177582610772565b610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c906113b5565b60405180910390fd5b816000808282546104269190611404565b925050819055507f012c78e2b84325878b1bd9d250d772cfe5bda7722d795f45036fa5e1e6e303fc60005460405161045e919061113c565b60405180910390a161046e6109a8565b5050565b61047a6109c1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104de576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e882826109c9565b505050565b7f7613a25ecc738585a232ad50a301178f12b3ba8887d13e138b523c4269c4768981565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600061053f610a1e565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561058d5750825b9050600060018367ffffffffffffffff161480156105c2575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156105d0575080155b15610607576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106575760018560000160086101000a81548160ff0219169083151502179055505b61065f610a46565b610667610a58565b6106746000801b336108fc565b5061069f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336108fc565b506106ca7f7613a25ecc738585a232ad50a301178f12b3ba8887d13e138b523c4269c47689336108fc565b5060008081905550831561072e5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107259190611491565b60405180910390a15b5050505050565b600080610740610a62565b905061076983826000016000878152602001908152602001600020610a8a90919063ffffffff16565b91505092915050565b60008061077d6108c0565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000801b81565b6000806107fd610a62565b905061081c816000016000858152602001908152602001600020610aa4565b915050919050565b61082d82610354565b610836816108e8565b61084083836109c9565b50505050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108b957506108b882610ab9565b5b9050919050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b6108f9816108f46109c1565b610b23565b50565b600080610907610a62565b905060006109158585610b74565b905080156109465761094484836000016000888152602001908152602001600020610c7590919063ffffffff16565b505b809250505092915050565b600061095b610ca5565b9050600281600001540361099b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b60006109b2610ca5565b90506001816000018190555050565b600033905090565b6000806109d4610a62565b905060006109e28585610ccd565b90508015610a1357610a1184836000016000888152602001908152602001600020610dcf90919063ffffffff16565b505b809250505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610a4e610dff565b610a56610e3f565b565b610a60610dff565b565b60007fc1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e82371705932000905090565b6000610a998360000183610e60565b60001c905092915050565b6000610ab282600001610e8b565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b2d8282610772565b610b705780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b679291906114ac565b60405180910390fd5b5050565b600080610b7f6108c0565b9050610b8b8484610772565b610c6957600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c056109c1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610c6f565b60009150505b92915050565b6000610c9d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610e9c565b905092915050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b600080610cd86108c0565b9050610ce48484610772565b15610dc357600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d5f6109c1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050610dc9565b60009150505b92915050565b6000610df7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f0c565b905092915050565b610e07611020565b610e3d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610e47610dff565b6000610e51610ca5565b90506001816000018190555050565b6000826000018281548110610e7857610e776114d5565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b6000610ea88383611040565b610f01578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610f06565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611014576000600182610f3e9190611504565b9050600060018660000180549050610f569190611504565b9050808214610fc5576000866000018281548110610f7757610f766114d5565b5b9060005260206000200154905080876000018481548110610f9b57610f9a6114d5565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610fd957610fd8611538565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061101a565b60009150505b92915050565b600061102a610a1e565b60000160089054906101000a900460ff16905090565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61109d81611068565b81146110a857600080fd5b50565b6000813590506110ba81611094565b92915050565b6000602082840312156110d6576110d5611063565b5b60006110e4848285016110ab565b91505092915050565b60008115159050919050565b611102816110ed565b82525050565b600060208201905061111d60008301846110f9565b92915050565b6000819050919050565b61113681611123565b82525050565b6000602082019050611151600083018461112d565b92915050565b6000819050919050565b61116a81611157565b811461117557600080fd5b50565b60008135905061118781611161565b92915050565b6000602082840312156111a3576111a2611063565b5b60006111b184828501611178565b91505092915050565b6111c381611157565b82525050565b60006020820190506111de60008301846111ba565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061120f826111e4565b9050919050565b61121f81611204565b811461122a57600080fd5b50565b60008135905061123c81611216565b92915050565b6000806040838503121561125957611258611063565b5b600061126785828601611178565b92505060206112788582860161122d565b9150509250929050565b61128b81611123565b811461129657600080fd5b50565b6000813590506112a881611282565b92915050565b600080604083850312156112c5576112c4611063565b5b60006112d385828601611299565b92505060206112e48582860161122d565b9150509250929050565b6000806040838503121561130557611304611063565b5b600061131385828601611178565b925050602061132485828601611299565b9150509250929050565b61133781611204565b82525050565b6000602082019050611352600083018461132e565b92915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000600082015250565b600061139f601683611358565b91506113aa82611369565b602082019050919050565b600060208201905081810360008301526113ce81611392565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061140f82611123565b915061141a83611123565b9250828201905080821115611432576114316113d5565b5b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061147b61147661147184611438565b611456565b611442565b9050919050565b61148b81611460565b82525050565b60006020820190506114a66000830184611482565b92915050565b60006040820190506114c1600083018561132e565b6114ce60208301846111ba565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061150f82611123565b915061151a83611123565b9250828203905081811115611532576115316113d5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212202f3da50404d9d0106c8303baecee45c4e367db924c263f4b9077c805e0412ab464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x207 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3472DF22 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x4460BDD6 EQ PUSH2 0x1C1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x20965255 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x344 JUMPI POP PUSH2 0x343 DUP3 PUSH2 0x846 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35F PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38B DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x39E DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x951 JUMP JUMPDEST PUSH2 0x3D6 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1404 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x12C78E2B84325878B1BD9D250D772CFE5BDA7722D795F45036FA5E1E6E303FC PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x46E PUSH2 0x9A8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x47A PUSH2 0x9C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E8 DUP3 DUP3 PUSH2 0x9C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7613A25ECC738585A232AD50A301178F12B3BA8887D13E138B523C4269C47689 DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x58D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5C2 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x657 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65F PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x667 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x674 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x8FC JUMP JUMPDEST POP PUSH2 0x69F PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x8FC JUMP JUMPDEST POP PUSH2 0x6CA PUSH32 0x7613A25ECC738585A232AD50A301178F12B3BA8887D13E138B523C4269C47689 CALLER PUSH2 0x8FC JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x740 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH2 0x769 DUP4 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xA8A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77D PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7FD PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH2 0x81C DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82D DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x836 DUP2 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x840 DUP4 DUP4 PUSH2 0x9C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8B9 JUMPI POP PUSH2 0x8B8 DUP3 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8F9 DUP2 PUSH2 0x8F4 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x907 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x915 DUP6 DUP6 PUSH2 0xB74 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x946 JUMPI PUSH2 0x944 DUP5 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xC75 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95B PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B2 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D4 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9E2 DUP6 DUP6 PUSH2 0xCCD JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA13 JUMPI PUSH2 0xA11 DUP5 DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xDCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA4E PUSH2 0xDFF JUMP JUMPDEST PUSH2 0xA56 PUSH2 0xE3F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA60 PUSH2 0xDFF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC1F6FE24621CE81EC5827CAF0253CADB74709B061630E6B55E82371705932000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB2 DUP3 PUSH1 0x0 ADD PUSH2 0xE8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2D DUP3 DUP3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0xB70 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP3 SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB7F PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB8B DUP5 DUP5 PUSH2 0x772 JUMP JUMPDEST PUSH2 0xC69 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC05 PUSH2 0x9C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xE9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCD8 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE4 DUP5 DUP5 PUSH2 0x772 JUMP JUMPDEST ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD5F PUSH2 0x9C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0xF0C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE07 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE47 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE51 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE78 JUMPI PUSH2 0xE77 PUSH2 0x14D5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA8 DUP4 DUP4 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0xF01 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1014 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0x14D5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF9B JUMPI PUSH2 0xF9A PUSH2 0x14D5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0xFD9 JUMPI PUSH2 0xFD8 PUSH2 0x1538 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x101A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102A PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109D DUP2 PUSH2 0x1068 JUMP JUMPDEST DUP2 EQ PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BA DUP2 PUSH2 0x1094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10E4 DUP5 DUP3 DUP6 ADD PUSH2 0x10AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1102 DUP2 PUSH2 0x10ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x112D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116A DUP2 PUSH2 0x1157 JUMP JUMPDEST DUP2 EQ PUSH2 0x1175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1187 DUP2 PUSH2 0x1161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP2 PUSH2 0x1157 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120F DUP3 PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121F DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP2 EQ PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123C DUP2 PUSH2 0x1216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1258 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1267 DUP6 DUP3 DUP7 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1278 DUP6 DUP3 DUP7 ADD PUSH2 0x122D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x128B DUP2 PUSH2 0x1123 JUMP JUMPDEST DUP2 EQ PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A8 DUP2 PUSH2 0x1282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C5 JUMPI PUSH2 0x12C4 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E4 DUP6 DUP3 DUP7 ADD PUSH2 0x122D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0x1063 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP6 DUP3 DUP7 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1324 DUP6 DUP3 DUP7 ADD PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1337 DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1352 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139F PUSH1 0x16 DUP4 PUSH2 0x1358 JUMP JUMPDEST SWAP2 POP PUSH2 0x13AA DUP3 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13CE DUP2 PUSH2 0x1392 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140F DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x141A DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1432 JUMPI PUSH2 0x1431 PUSH2 0x13D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147B PUSH2 0x1476 PUSH2 0x1471 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148B DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1482 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x14CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x150F DUP3 PUSH2 0x1123 JUMP JUMPDEST SWAP2 POP PUSH2 0x151A DUP4 PUSH2 0x1123 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1532 JUMPI PUSH2 0x1531 PUSH2 0x13D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F RETURNDATASIZE 0xA5 DIV DIV 0xD9 0xD0 LT PUSH13 0x8303BAECEE45C4E367DB924C26 EXTCODEHASH 0x4B SWAP1 PUSH24 0xC805E0412AB464736F6C6343000814003300000000000000 ","sourceMap":"321:1024:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:212:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1264:79:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1052:206:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6348:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;493:72:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;427:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;689:357;;;:::i;:::-;;2492:233:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3732:207:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2893:222:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1695:212:1;1780:4;1818:42;1803:57;;;:11;:57;;;;:97;;;;1864:36;1888:11;1864:23;:36::i;:::-;1803:97;1796:104;;1695:212;;;:::o;1264:79:10:-;1305:7;1331:5;;1324:12;;1264:79;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;1052:206:10:-;3251:21:4;:19;:21::i;:::-;1141:28:10::1;464:23;1161:7;1141;:28::i;:::-;1133:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1215:6;1206:5;::::0;:15:::1;;;;;;;:::i;:::-;;;;;;;;1236;1245:5;;1236:15;;;;;;:::i;:::-;;;;;;;;3293:20:4::0;:18;:20::i;:::-;1052:206:10;;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;493:72:10:-;536:29;493:72;:::o;427:60::-;464:23;427:60;:::o;689:357::-;4158:30:2;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;740:24:10::1;:22;:24::i;:::-;804:32;:30;:32::i;:::-;884:42;2362:4:0;895:18:10::0;::::1;915:10;884;:42::i;:::-;;936:34;464:23;959:10;936;:34::i;:::-;;980:40;536:29;1009:10;980;:40::i;:::-;;1038:1;1030:5:::0;:9:::1;;;;5070:14:2::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;689:357:10:o;2492:233:1:-;2573:7;2592:40;2635:36;:34;:36::i;:::-;2592:79;;2688:30;2712:5;2688:1;:14;;:20;2703:4;2688:20;;;;;;;;;;;:23;;:30;;;;:::i;:::-;2681:37;;;2492:233;;;;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;2317:49::-;2362:4;2317:49;;;:::o;2893:222:1:-;2964:7;2983:40;3026:36;:34;:36::i;:::-;2983:79;;3079:29;:1;:14;;:20;3094:4;3079:20;;;;;;;;;;;:27;:29::i;:::-;3072:36;;;2893:222;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;3443:202::-;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;2787:177::-;2845:30;2920:28;2910:38;;2787:177;:::o;4148:103::-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;3217:348:1:-;3303:4;3319:40;3362:36;:34;:36::i;:::-;3319:79;;3408:12;3423:31;3440:4;3446:7;3423:16;:31::i;:::-;3408:46;;3468:7;3464:71;;;3491:33;3516:7;3491:1;:14;;:20;3506:4;3491:20;;;;;;;;;;;:24;;:33;;;;:::i;:::-;;3464:71;3551:7;3544:14;;;;3217:348;;;;:::o;3326:384:4:-;3375:32;3410:28;:26;:28::i;:::-;3375:63;;1847:1;3526;:9;;;:20;3522:88;;3569:30;;;;;;;;;;;;;;3522:88;1847:1;3684;:9;;:19;;;;3365:345;3326:384::o;3716:283::-;3764:32;3799:28;:26;:28::i;:::-;3764:63;;1805:1;3969;:9;;:23;;;;3754:245;3716:283::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;3668:353:1:-;3755:4;3771:40;3814:36;:34;:36::i;:::-;3771:79;;3860:12;3875:32;3893:4;3899:7;3875:17;:32::i;:::-;3860:47;;3921:7;3917:74;;;3944:36;3972:7;3944:1;:14;;:20;3959:4;3944:20;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;3917:74;4007:7;4000:14;;;;3668:353;;;;:::o;8737:170:2:-;8795:30;8870:21;8860:31;;8737:170;:::o;2540:111:4:-;6931:20:2;:18;:20::i;:::-;2610:34:4::1;:32;:34::i;:::-;2540:111::o:0;1463:75:1:-;6931:20:2;:18;:20::i;:::-;1463:75:1:o;1250:207::-;1318:40;1403:38;1393:48;;1250:207;:::o;9574:156:9:-;9648:7;9698:22;9702:3;:10;;9714:5;9698:3;:22::i;:::-;9690:31;;9667:56;;9574:156;;;;:::o;9117:115::-;9180:7;9206:19;9214:3;:10;;9206:7;:19::i;:::-;9199:26;;9117:115;;;:::o;1034:146:5:-;1110:4;1148:25;1133:40;;;:11;:40;;;;1126:47;;1034:146;;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;8316:150:9:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;2251:183:4:-;2311:32;2388:30;2378:40;;2251:183;:::o;7892:388:0:-;7970:4;7986:30;8019:26;:24;:26::i;:::-;7986:59;;8059:22;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:1;:8;;:14;8106:4;8097:14;;;;;;;;;;;:22;;:31;8120:7;8097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8182:12;:10;:12::i;:::-;8155:40;;8173:7;8155:40;;8167:4;8155:40;;;;;;;;;;8216:4;8209:11;;;;;8055:219;8258:5;8251:12;;;7892:388;;;;;:::o;8634:156:9:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;7084:141:2:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2657:183:4:-;6931:20:2;:18;:20::i;:::-;2737:32:4::1;2772:28;:26;:28::i;:::-;2737:63;;1805:1;2810;:9;;:23;;;;2727:113;2657:183::o:0;4923:118:9:-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;;5009:25;;4923:118;;;;:::o;4474:107::-;4530:7;4556:3;:11;;:18;;;;4549:25;;4474:107;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;2815:1368::-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;8487:120:2:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4264:129:9:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:77::-;1990:7;2019:5;2008:16;;1953:77;;;:::o;2036:122::-;2109:24;2127:5;2109:24;:::i;:::-;2102:5;2099:35;2089:63;;2148:1;2145;2138:12;2089:63;2036:122;:::o;2164:139::-;2210:5;2248:6;2235:20;2226:29;;2264:33;2291:5;2264:33;:::i;:::-;2164:139;;;;:::o;2309:329::-;2368:6;2417:2;2405:9;2396:7;2392:23;2388:32;2385:119;;;2423:79;;:::i;:::-;2385:119;2543:1;2568:53;2613:7;2604:6;2593:9;2589:22;2568:53;:::i;:::-;2558:63;;2514:117;2309:329;;;;:::o;2644:118::-;2731:24;2749:5;2731:24;:::i;:::-;2726:3;2719:37;2644:118;;:::o;2768:222::-;2861:4;2899:2;2888:9;2884:18;2876:26;;2912:71;2980:1;2969:9;2965:17;2956:6;2912:71;:::i;:::-;2768:222;;;;:::o;2996:126::-;3033:7;3073:42;3066:5;3062:54;3051:65;;2996:126;;;:::o;3128:96::-;3165:7;3194:24;3212:5;3194:24;:::i;:::-;3183:35;;3128:96;;;:::o;3230:122::-;3303:24;3321:5;3303:24;:::i;:::-;3296:5;3293:35;3283:63;;3342:1;3339;3332:12;3283:63;3230:122;:::o;3358:139::-;3404:5;3442:6;3429:20;3420:29;;3458:33;3485:5;3458:33;:::i;:::-;3358:139;;;;:::o;3503:474::-;3571:6;3579;3628:2;3616:9;3607:7;3603:23;3599:32;3596:119;;;3634:79;;:::i;:::-;3596:119;3754:1;3779:53;3824:7;3815:6;3804:9;3800:22;3779:53;:::i;:::-;3769:63;;3725:117;3881:2;3907:53;3952:7;3943:6;3932:9;3928:22;3907:53;:::i;:::-;3897:63;;3852:118;3503:474;;;;;:::o;3983:122::-;4056:24;4074:5;4056:24;:::i;:::-;4049:5;4046:35;4036:63;;4095:1;4092;4085:12;4036:63;3983:122;:::o;4111:139::-;4157:5;4195:6;4182:20;4173:29;;4211:33;4238:5;4211:33;:::i;:::-;4111:139;;;;:::o;4256:474::-;4324:6;4332;4381:2;4369:9;4360:7;4356:23;4352:32;4349:119;;;4387:79;;:::i;:::-;4349:119;4507:1;4532:53;4577:7;4568:6;4557:9;4553:22;4532:53;:::i;:::-;4522:63;;4478:117;4634:2;4660:53;4705:7;4696:6;4685:9;4681:22;4660:53;:::i;:::-;4650:63;;4605:118;4256:474;;;;;:::o;4736:::-;4804:6;4812;4861:2;4849:9;4840:7;4836:23;4832:32;4829:119;;;4867:79;;:::i;:::-;4829:119;4987:1;5012:53;5057:7;5048:6;5037:9;5033:22;5012:53;:::i;:::-;5002:63;;4958:117;5114:2;5140:53;5185:7;5176:6;5165:9;5161:22;5140:53;:::i;:::-;5130:63;;5085:118;4736:474;;;;;:::o;5216:118::-;5303:24;5321:5;5303:24;:::i;:::-;5298:3;5291:37;5216:118;;:::o;5340:222::-;5433:4;5471:2;5460:9;5456:18;5448:26;;5484:71;5552:1;5541:9;5537:17;5528:6;5484:71;:::i;:::-;5340:222;;;;:::o;5568:169::-;5652:11;5686:6;5681:3;5674:19;5726:4;5721:3;5717:14;5702:29;;5568:169;;;;:::o;5743:172::-;5883:24;5879:1;5871:6;5867:14;5860:48;5743:172;:::o;5921:366::-;6063:3;6084:67;6148:2;6143:3;6084:67;:::i;:::-;6077:74;;6160:93;6249:3;6160:93;:::i;:::-;6278:2;6273:3;6269:12;6262:19;;5921:366;;;:::o;6293:419::-;6459:4;6497:2;6486:9;6482:18;6474:26;;6546:9;6540:4;6536:20;6532:1;6521:9;6517:17;6510:47;6574:131;6700:4;6574:131;:::i;:::-;6566:139;;6293:419;;;:::o;6718:180::-;6766:77;6763:1;6756:88;6863:4;6860:1;6853:15;6887:4;6884:1;6877:15;6904:191;6944:3;6963:20;6981:1;6963:20;:::i;:::-;6958:25;;6997:20;7015:1;6997:20;:::i;:::-;6992:25;;7040:1;7037;7033:9;7026:16;;7061:3;7058:1;7055:10;7052:36;;;7068:18;;:::i;:::-;7052:36;6904:191;;;;:::o;7101:85::-;7146:7;7175:5;7164:16;;7101:85;;;:::o;7192:101::-;7228:7;7268:18;7261:5;7257:30;7246:41;;7192:101;;;:::o;7299:60::-;7327:3;7348:5;7341:12;;7299:60;;;:::o;7365:156::-;7422:9;7455:60;7472:42;7481:32;7507:5;7481:32;:::i;:::-;7472:42;:::i;:::-;7455:60;:::i;:::-;7442:73;;7365:156;;;:::o;7527:145::-;7621:44;7659:5;7621:44;:::i;:::-;7616:3;7609:57;7527:145;;:::o;7678:236::-;7778:4;7816:2;7805:9;7801:18;7793:26;;7829:78;7904:1;7893:9;7889:17;7880:6;7829:78;:::i;:::-;7678:236;;;;:::o;7920:332::-;8041:4;8079:2;8068:9;8064:18;8056:26;;8092:71;8160:1;8149:9;8145:17;8136:6;8092:71;:::i;:::-;8173:72;8241:2;8230:9;8226:18;8217:6;8173:72;:::i;:::-;7920:332;;;;;:::o;8258:180::-;8306:77;8303:1;8296:88;8403:4;8400:1;8393:15;8427:4;8424:1;8417:15;8444:194;8484:4;8504:20;8522:1;8504:20;:::i;:::-;8499:25;;8538:20;8556:1;8538:20;:::i;:::-;8533:25;;8582:1;8579;8575:9;8567:17;;8606:1;8600:4;8597:11;8594:37;;;8611:18;;:::i;:::-;8594:37;8444:194;;;;:::o;8644:180::-;8692:77;8689:1;8682:88;8789:4;8786:1;8779:15;8813:4;8810:1;8803:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","SUPER_ADMIN_ROLE()":"4460bdd6","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getValue()":"20965255","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize()":"8129fc1c","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setValue(uint256,address)":"3472df22","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contractA.sol\":\"ContractA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc603154d2a4d8f88d4d3c11090a8224f572c4b1f8baced3ea46cdec49f4674ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://573f2a2512341950ba78fcee72e3f50b728e5e27269292bfc4dc835b2d2a03aa\",\"dweb:/ipfs/QmWvKXstgHKFZen4RD56PM4PeE7MaqunEpxKxaj5FhJUNc\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/contractA.sol\":{\"keccak256\":\"0x3fded7c8c89c59ad901df482be01a0f2e960a20dfc5b814ac21231d1d16169c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3ab2d675cdbae7098f2abaf04d0d8e935cbcca560f0f3adebc38f7b4565a574\",\"dweb:/ipfs/QmQu5bNodNCtJLNn7N3DGNbwXZyyr53cok7kLdGF8HHVmT\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1789,"contract":"contracts/contractA.sol:ContractA","label":"value","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}